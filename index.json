[{"categories":["人工智能"],"content":"最近ChatGPT在国外特别火💥，想要体验的朋友会被手机验证码拦住，必须使用国外手机号注册，用Google Voice虚拟号码接收不到验证码。 准备好翻墙工具。 注册sms-activate平台，用于接受短信验证码的平台，上面有很多国家的手机号。 注册完之后，充值0.5美元，可以使用支付宝平台，充值成功后，服务搜索框输入OpenAI，选择国家时选择India，购买成功后，去OpenId注册手机号时，填上sms-activate购买的手机号（ps:注意输入号码的时候不要把国际区号也输入进去了），之后就等着sms-activate接受验证码。 sms-activate 开始调戏ChatGPT。 ChatGPT ","date":"2022-12-08","objectID":"/use-chatgpt/:0:0","tags":["ChatGPT"],"title":"注册使用ChatGPT","uri":"/use-chatgpt/"},{"categories":["碎碎念"],"content":"2022.12.01 睡觉？ 看球？ 这是一个问题🤔 ","date":"2022-12-02","objectID":"/broken-thoughts-in-december-2022/:0:1","tags":["随想"],"title":"2022年12月-碎碎念","uri":"/broken-thoughts-in-december-2022/"},{"categories":["碎碎念"],"content":"2022.12.02 今年世界杯日本真的让人刮目相看，分到死亡之组，同组中有西班牙🇪🇸，德国🇩🇪，赛前不被看好，两场逆转，每场比赛都是拼出来的结果，日本真的让人很酸🍋，国足就是太急功近利，金元足球过后留下了一地鸡毛。 ","date":"2022-12-02","objectID":"/broken-thoughts-in-december-2022/:0:2","tags":["随想"],"title":"2022年12月-碎碎念","uri":"/broken-thoughts-in-december-2022/"},{"categories":["碎碎念"],"content":"2022.12.03 有趣的图片，思维角度的不同，图片呈现的图像也会不同。 亲爱的朋友你看到的是什么呢？ ","date":"2022-12-02","objectID":"/broken-thoughts-in-december-2022/:0:3","tags":["随想"],"title":"2022年12月-碎碎念","uri":"/broken-thoughts-in-december-2022/"},{"categories":["碎碎念"],"content":"2022.12.04 🥶 ","date":"2022-12-02","objectID":"/broken-thoughts-in-december-2022/:0:4","tags":["随想"],"title":"2022年12月-碎碎念","uri":"/broken-thoughts-in-december-2022/"},{"categories":["碎碎念"],"content":"2022.12.05 知乎上看到的产品经理书单，收藏一下，慢慢看👀，看完你就是产品大神——史上最全产品经理书单。 ","date":"2022-12-02","objectID":"/broken-thoughts-in-december-2022/:0:5","tags":["随想"],"title":"2022年12月-碎碎念","uri":"/broken-thoughts-in-december-2022/"},{"categories":["碎碎念"],"content":"2022.12.06 今天注册了最近国外很火的AI工具ChatGPT，调戏了一会儿，感叹现在人工智能的强大，AI能画画，能写代码，而且还是带注释那种😳，今天拿它来做leetcode的题目，它给出的解题思路很清晰1，2，3…每一步都给你列好了，以后用AI辅助编程效率会大大提高。因为它不像GitHub Copilot那样代码智能补全，它会给你提供新思路，或者更好的解决方案。 ","date":"2022-12-02","objectID":"/broken-thoughts-in-december-2022/:0:6","tags":["随想"],"title":"2022年12月-碎碎念","uri":"/broken-thoughts-in-december-2022/"},{"categories":["开发"],"content":"再见了WordPress，全面拥抱Hugo 2020年11月的某天心血来潮，想开个Blog吧，说干就干，买服务器，买域名，远程安装phpstudy，登录phpstudy后台，使用WordPress搭建个人Blog网站，最终完成了Blog搭建。花费不小，服务器和域名都是白花花的银子，不过是在促销活动中买的省了不少钱（ps：暂时安慰自己😭）。WordPress虽然号称全球有40%的网站是用它构建的，但是毕竟时代在进步，以前PHP横扫互联网的日子一去不复返了，毕竟它与服务器是动态交互的，数据是存储在数据库中的，黑客们会不断请求服务器寻找软件漏洞，而且经常有一些不友好的评论，虽然有评论拦截器，但还是深受其扰，经常登录后台看到有几千条垃圾评论。 直到2022年的某一天，静态Blog搭建进入我的视线。操作优雅，而且关键省去了服务器的钱。从此之后Blog迁移提上日程（ps:其实也没有多少文章😅）。 ","date":"2022-11-24","objectID":"/build-blog-with-hugo/:1:0","tags":["Blog","Hugo"],"title":"再见了WordPress，全面拥抱Hugo","uri":"/build-blog-with-hugo/"},{"categories":["开发"],"content":"安装Hugo Hugo是一个用Go语言编写的静态网站生成器。 使用Hugo创建网站之前 需要安装Hugo 需要安装Git 完成上述步骤之后，让我们本地创建新的Hugo网站吧。 1.创建项目 hugo new site my_website cd my_website 2.安装主题 Hugo 提供了丰富的主题，可在官网中预览主题，挑选自己喜欢的主题。 我选择的是LoveIt主题。 初始化你的项目目录为git仓库， 并且把主题仓库作为你的网站目录的子模块: git init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt 3.Hugo配置 以LoveIt主题为例 baseURL = \"http://example.org/\" # 更改使用 Hugo 构建网站时使用的默认主题 theme = \"LoveIt\" # 网站标题 title = \"我的全新 Hugo 网站\" # 网站语言, 仅在这里 CN 大写 [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"zh-CN\" # 语言名称 [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"简体中文\" # 是否包括中日韩文字 hasCJKLanguage = true # 作者配置 [author] name = \"xxxx\" email = \"\" link = \"\" # 菜单配置 [menu] [[menu.main]] weight = 1 identifier = \"posts\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" name = \"文章\" url = \"/posts/\" # 当你将鼠标悬停在此菜单链接上时, 将显示的标题 title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" # Hugo 解析文档的配置 [markup] # 语法高亮设置 (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false 是必要的设置 (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false 4.启动服务 hugo serve 执行后本地访问http://localhost:1313 就能看到Hugo生成的网站了 ","date":"2022-11-24","objectID":"/build-blog-with-hugo/:1:1","tags":["Blog","Hugo"],"title":"再见了WordPress，全面拥抱Hugo","uri":"/build-blog-with-hugo/"},{"categories":["开发"],"content":"配置GitHub Pages 网站生成了，怎么把他放到互联网上呢🤔，这里用到了GitHub Pages。 GitHub Pages 是GitHub提供的一个网页代管服务，于2008年推出。可以用于存放静态网页，包括Blog，项目文档甚至整本书。 首先创建个公有仓库，用于存放Hugo构建后生成的静态文件，仓库名必须是user.github.io，user是你的GitHub用户名且全小写。 创建完成后点击仓库的Settings，选择Pages打开，打开之后的效果。 自动发布 精髓，优雅的地方来了~🤩 有了Git公有仓库，虽然每次写完文章，本地Hugo生成静态文件后，再推到远程仓库上，但是操作繁琐。不应该是写好文章自动部署到公有仓库上嘛？ 你想到的Github它想不到嘛？🤣 隆重推出Github家又一款明星产品GitHub Action，GItHub Actions是一个持续集成和持续交付的平台，能够让你自动化你的编译、测试和部署流程。 简单说的就是，Action会监听仓库某些事件（如提交），触发一些操作（编译，计算，打包等），这里就是所说的自动化。 配置Action工作流，需要git仓库根目录下创建**.github/workflows目录，配置文件.yml**结尾，以下是我的配置文件内容。 name: deploy on: push: workflow_dispatch: schedule: # Runs everyday at 8:00 AM - cron: \"0 0 * * *\" jobs: build: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v2 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \"latest\" - name: Build Web run: hugo - name: Deploy Web uses: peaceiris/actions-gh-pages@v3 with: PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }} EXTERNAL_REPOSITORY: EricZZZ/ericzzz.github.io PUBLISH_BRANCH: master PUBLISH_DIR: ./public commit_message: ${{ github.event.head_commit.message }} PERSONAL_TOKEN ：因为是从私有仓库推到GitHub Pages的公有仓库上需要权限，这里需要创建个Token，权限开启 repo 与 workflow。 PUBLISH_BRANCH：监听哪个分支。 PUBLISH_DIR：编译后生成的静态文件目录。 EXTERNAL_REPOSITORY：推送到的远程仓库地址。 再到私有仓库setting里的Actions secrets，把刚才的Token添加进去。 好了万事俱备，只欠东风。在私有仓库里创建一篇文章并提交到远程。查看Action是否触发构建。 如果Action运行正常后，通过访问 http://ericzzz.github.io 查看刚才自己提交的文章有没有部署成功。 ","date":"2022-11-24","objectID":"/build-blog-with-hugo/:1:2","tags":["Blog","Hugo"],"title":"再见了WordPress，全面拥抱Hugo","uri":"/build-blog-with-hugo/"},{"categories":["开发"],"content":"配置Netlify 到现在为止网站已经部署成功了，但是用的GitHub的流量，在国内访问可就太痛苦了，网站经常会打不开。怎么办呢？使用Netlify来部署咱们的静态网站。 Netlify跟GitHub搭配也很好用，不用配置Action了。 创建Netlify账号并与GitHub关联。 新建网站，选择你的私有仓库，选择分支，使用Hugo构建，静态public目录。 部署完成后通过netlify分配的域名访问https://rad-seahorse-8dd9c0.netlify.app ","date":"2022-11-24","objectID":"/build-blog-with-hugo/:1:3","tags":["Blog","Hugo"],"title":"再见了WordPress，全面拥抱Hugo","uri":"/build-blog-with-hugo/"},{"categories":["开发"],"content":"配置域名 到目前为止，用的都是第三方平台的二级域名，这样不利于建立个人品牌。 配置属于自己域名的Blog。 购买域名 购买域名平台很多，国内的阿里云，腾讯云，华为云等，国外有亚马逊，GoDaddy等，不过在国内域名都要备案，稍微有一丢丢麻烦。 Netlify域名配置 购买域名后，我们需要用自己的域名访问到Netlify给分配的网站https://rad-seahorse-8dd9c0.netlify.app。 我是在GoDaddy平台上购买的域名，用GoDaddy来举例。 修改DNS 先去Netlify新增一个域名，Netlify会告诉你要去域名提供商添加一条CNAME记录。再到GoDaddy后台DNS管理那里新增一条记录。（ps:这里A标签也改成了Netlify的地址） 新增完成后过上一会儿，Netlify自动检查成功就能通过自己域名访问了，记得在Netlify中把HTTPS配置上https://miasanmia.cc/ ","date":"2022-11-24","objectID":"/build-blog-with-hugo/:1:4","tags":["Blog","Hugo"],"title":"再见了WordPress，全面拥抱Hugo","uri":"/build-blog-with-hugo/"},{"categories":["开发"],"content":"大功告成🎉 以上就完成了静态Blog网站的搭建，以后每写一篇文章提交到远程仓库，网站就会自动部署发布新文章了🙂。 ","date":"2022-11-24","objectID":"/build-blog-with-hugo/:1:5","tags":["Blog","Hugo"],"title":"再见了WordPress，全面拥抱Hugo","uri":"/build-blog-with-hugo/"},{"categories":["开发"],"content":"其他 配置Google Analytics，Google Search Console 修改Hugo 配置文件config.toml，我用LoveIt主题刚好有配置的地方，把信息填上即可。 Google Analytics登录后台，搜索Measurement，就能找到谷歌分析代码。如下图： # 网站分析配置 [params.analytics] enable = true # Google Analytics [params.analytics.google] id = \"\" #这里填Google分析代码 # 是否匿名化用户 IP anonymizeIP = true 设置完成后，别忘了到Google Analytics管理后台与Google Search Console关联，Google Search Console帮助人们管理Google SEO。 给Google提交sitemap方便快速建立索引，增加你的网站曝光率。 使用Hugo建站会自动生成sitemap，地址是在根目录下，也就是 https://你的域名/sitemap.xml。例如本站的sitemap地址就是https://miasanmia.cc/sitemap.xml 配置评论 网站建好了，该有的评论也整上，很简单不需要额外的花费。 这里用到的评论系统插件是giscus，下面是使用giscus的必要条件，尤其是2，3一定要去github上开启。 此仓库是公开的，否则访客将无法查看 discussion。 giscus app 已安装否则访客将无法评论和回应。 Discussions功能已在你的仓库中启用。 检测仓库是否满足条件。 开启时之后，在giscus页面上填上你的公开仓库地址，自己选择配置，giscus会自动生成配置，我们需要把这些配置填到Hugo的config.toml文件里。 # giscus comment 评论系统设置 (https://giscus.app/zh-CN) [params.page.comment.giscus] # 你可以参考官方文档来使用下列配置 enable = true repo = \"xxxxx\" repoId = \"xxxxx\" category = \"Announcements\" categoryId = \"xxxxxxx\" # 为空时自动适配当前主题 i18n 配置 lang = \"\" mapping = \"pathname\" reactionsEnabled = \"1\" emitMetadata = \"0\" inputPosition = \"bottom\" lazyLoading = true lightTheme = \"light\" darkTheme = \"dark\" 部署之后就能在文章下面看到评论区了，看到这里的朋友们还不到评论区里留下你的痕迹🤗。 ","date":"2022-11-24","objectID":"/build-blog-with-hugo/:1:6","tags":["Blog","Hugo"],"title":"再见了WordPress，全面拥抱Hugo","uri":"/build-blog-with-hugo/"},{"categories":["开发"],"content":"参考链接 Hugo + GitHub Action，搭建你的博客自动发布系统 ","date":"2022-11-24","objectID":"/build-blog-with-hugo/:1:7","tags":["Blog","Hugo"],"title":"再见了WordPress，全面拥抱Hugo","uri":"/build-blog-with-hugo/"},{"categories":["碎碎念"],"content":"2022.11.01 目前国内云厂商里对开发者来说还是阿里的生态最好，产品体验在线，文档全面。自从我司迁成华为云后，拿一些开源的中间件就出来卖，一点儿附加功能都没有。脸都不要了😡，也不知道谁把我们董事长忽悠瘸了😂，严重怀疑有人拿回扣了🤔️ ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:1","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.02 今天看到一个好东西🤩，分享一下凤凰架构 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:2","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.04 世上有两种游戏 一种可成为有限游戏，另一种为无限游戏。 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:3","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.05 又给自己开了一个坑Elixir,学习一下Elixir语言🤓,可惜安装Phoenix框架的时候，依赖下载不下来，贼气在公司里不能摸鱼了😣 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:4","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.06 一口气跑了16km🤣 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:5","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.09 跟公司产品battle了一下午🤬，害得我都没看DDIA 第三章：存储与检索赶快晚上补上。 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:6","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.10 最近越来越多疆内的朋友咨询我“在四川生活怎么样？”新疆好多地方因为疫情在家封了好久了。下图是新疆朋友圈😢 夏，秋，冬，就差春天了🙄 有的朋友封城的时候没准备过冬的衣服，一直到现在还是短衣短裤，得亏新疆有暖气，要不冻死人🥶 我也不知道如何安慰我这些朋友们，我想起来一个纪录片是许知远采访张楚。 有观众问张楚：这个世界会好吗 看完他的回答，我更加坚定我的想法：这个世界一定会好的！ ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:7","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.11 又是一年一度双十一购物节，今天你剁手了嘛😂 参与双十一活动印象最深是在上大学的时候，好像是2014年，那年活动简单、粗暴、无脑，就是枪红包，和拉好友位，刚好是在上学周围氛围又好，经常能裂变出红包，有个活动在电脑上点点拼手速，当时直接用了黑科技😎，用按键精灵写脚本一直开着，当别人点100多下，脚本已经可以点2~300下，我怕调多了天猫判我作弊🤣，还有个好处，不用一直盯着点，24小时只要有红包脚本就能一直点，最后好像用枪到的红包买了电饭煲，在宿舍吃火锅，哈哈哈😁 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:8","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.12 刷算法题，又是递归，整的脑壳疼，一看就会，一写就废。 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:9","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.13 一大早就来公司加班，什么仇什么怨？ ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:10","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.14 现在几乎每天都会登到Google Analytics后台看有没有增加的新用户，虽然小站内容不是很多，我希望一直能写下去。 写作是个思考的过程，能把看的想的记录下来，慢慢思考就深了。 写作是体现自己价值的地方，希望写的东西（比如教程类的）能让人有收获。 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:11","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.15 应某人要求🥰，博客增加了评论系统，用的是giscus插件，原来GitHub这么强大，评论系统都能集成进去，没花我一分钱，不用担心数据量大扩容问题，不用担心服务器性能瓶颈，最后总结：白嫖真香🤪 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:12","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.16 如果有一天我变得很有钱 我的第一选择不是去环游世界 躺在世界上最大最软的沙发里 吃了就睡醒了再吃先过一年 如果有一天我变得很有钱 就可以把所有人都留在我身边 每天快快乐乐吃吃喝喝聊聊天 不用担心关于明天或离别 如果有一天我变得很有钱 我会买下所有难得一见的笑脸 让所有可怜的孩子不再胆怯 所有邪恶的人不再掌握话语权 如果有一天我变得很有钱 我会想尽一切办法倒流时间 不是为了人类理想做贡献 只是想和她说一句我很抱歉 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:13","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.17 塔勒布说过：“21世纪有三大毒品：海洛因，碳水化合物和每月发一次的工资。” ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:14","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.18 自从练习跑步🏃‍后，体重掉的挺快，几乎一周掉一斤肉吧，再这样下去真要成专业马拉松选手的身材了😟 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:15","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.19 又是摸鱼🐟的一天。 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:16","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.20 2014年世界杯，在江苏南京。 2018年世界杯，在新疆乌鲁木齐。 2022年世界杯，在四川成都。 2026年世界杯，将会在哪里呢🤔️ ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:17","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.21 被格拉利什的庆祝动作感动到了💕 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:18","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.22 潘帕斯雄鹰被击落了😬 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:19","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.23 田忌赛马，日本队带着东方智慧，战胜了强大的德国战车。 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:20","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.24 这一定是新消费主义陷阱😭。 可是我现在依然还记得2017年，利用7天年假的时间，一个人坐飞机🛫到上海去看拜仁中国行的友谊赛。 永远忘不了去堵酒店见到了哈马😘 永远忘不了那一小撮跟随拜仁来的主场球迷们，他们的助威声实在是太大了😀 永远忘不了比赛结束后，球员举着横幅感谢球迷们💖 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:21","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.25 今天乌鲁木齐的天是灰色的，向11.24的遇难者默哀🕯️ ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:22","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.26 又是不平凡的一夜。 Do You Hear the People Sing? ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:23","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.27 人生果实这部记录片不错，现在发现记录片比一些电影好看，比起电影的视觉冲击，记录片更多是对人生，社会的深度思考，一部记录片都会改变你的价值观。 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:24","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.28 每次居家办公的时候，时间就过的飞快，感觉什么还没做呢，就下午6点半了🥲 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:25","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.29 很平淡的一天。 ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:26","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["碎碎念"],"content":"2022.11.30 🕯️🕯️🕯️ ","date":"2022-11-20","objectID":"/broken-thoughts-in-november/:0:27","tags":["随想"],"title":"2022年11月-碎碎念","uri":"/broken-thoughts-in-november/"},{"categories":["阅读"],"content":"推荐指数 ❤️❤️❤️❤️ 作者大前研一，日本著名管理学家，经济评论家。曾任马兰西亚前首相经济顾问。 谈到低欲望社会都会想到日本，日本经济自90年代初泡沫之后，到目前被称为“消失的30年”，经济一直没有起色，自从安倍上台，大搞经济改革，被外界誉为“安倍经济学”。 安倍经济学三支箭： 异次元货币宽松 。（白话文讲就是大放水，疯狂印钱） 灵活的财政政策。 促进民间投资的增长策略。 安倍经济学在书中虽然被作者喷的体无完肤😂，咱们还是客观点看好一些。 日本2021年GDP $53741.3亿美元，中国2021年GDP $177280.19亿美元，中日两国目前在世界排名中第二和第三位，比GDP总量发现日本简直弱爆了，就这还是发达国家。但是对比人均GDP，日本2021年人均GDP $42963.23美元，中国2021年人均GDP $11887.52美元，分别在世界排名第24位，第68位。咱们国家人均GDP刚刚过1万美元，已经是一件很伟大的事情了，然而邻国早在40年前就已经人均GDP超过1万美金。90年代初是日本经济最鼎盛时期，人均GDP还超过了美国。 日本经济衰落，从房地产泡沫，股市崩盘开始，80年代日本经济强劲时期，骄傲的日本人说出“要拿着钱买下美国。“的豪言壮语，有句老话说的好“上帝要其灭亡，必使其疯狂。”此时场景让我想起国内的12～13年，17～18年房地产火爆的景象，新盘刚一推出分分钟抢光，更有甚者全款买楼，这里面除了真正的刚需，其他有多少投资买房，想着楼房封顶，转手一卖挣上翻翻。而如今堆高房价，股市崩盘，人口老龄化，佛系，躺平越来越像走日本的老路了。 日本是世界上的长寿国家，男性平均寿命81岁，女性平均寿命87岁。说明在日本很适合养老😄 日本是资本主义国家里最社会主义的一个，虽然读起来很拗口，虽然是两种不同的意识形态。它确实是财富最平均的一个国家，政府覆盖了养老，医疗，税收一系列的制度。日本政府对富人收税向来是比较高的，这条被作者一顿输出，作者认为过多收税导致富人迁移海外定居或在海外开工厂，导致本地工作减少，收入减少，给日本经济带来不稳定点。（现在想想最近中国互联网圈里的大佬， 如不爱金钱杰克马，不知妻美大强子纷纷卸任出国养老，原来也是怕收割啊😂😂😂） 日本房价利率很低（20年利率1.35%～2.41%），但还是有很少的人买房。原因就是大家普遍认为“年纪轻轻就背上25年至30年的房贷买房，人生一开始就输在起跑线上——负债数千万日元。”，第二个原因是“一旦拥有住房，当被公司调离工作，特别是派驻海外的时候，就会成为一大累赘，收窄人生的选择。反过来，若是不拥有住房，其自由度就高很多。相较于持房者若能住上租金便宜，通勤时间较短的出租房，其金钱和时间就会更充裕。这一方面提升了生活的自主性，另一方面也使得“稍贵”消费或稍稍的奢侈享受，变得可能。”，这简直跟我的想法如出一辙。 面对出生率低，作者比较悲观说到“要想阻止经济规模缩小，就必须激活人口数量明显减少的地区，不过放眼世界，用国策激活地区的成功案例几乎没有。”作者提出的解决之道是大量移民归化。日本永居权需要十年在日居住时间才能获得，作者希望减少居住时长。 作者说到“无论哪个国家，刺激经济景气对策的支柱，只有住宅和汽车。家电制品或食品产业难以刺激经济。”国内房地产最近各地限购放开，对经济刺激不大，购买力还是不强。新能源汽车未来可能会是增长点，但是最近与美国对抗，陷入芯片荒，往后也不知道如何发展。 日本目前老年人很有钱，经历过日本经济辉煌时期，日本经济的衰败使这些不敢投资股市，不敢消费，宁可储蓄，“不想有责任”，“不想承担责任”，“不想扩大自己的责任”。为此，即使进了公司，也不想出人头地，将结婚视为重荷，将买房贷款视为一生被套牢——这些想法成了日本年轻人的主流想法。和中国年轻人不结婚，佛系躺平一样。 也是在书中看到的，了解一下日本地方自治。日本的地方自治与欧美的地方自治不同（比如德国，美国），它并不拥有三权（立法权，司法权和行政权）。立法权由国会把持，地方不得擅自制定法律。地方只能在国会规定的法律范围内，制定条例。司法权在法院，但是属于国家机关。拥有行政权的是内阁，都道府县及市镇村都作为政府的下属机关，只不过是为政府“在地方的行政服务而已”。 作者还抨击日本的大学教育，指出日本大学泛滥，数量多但质量不高，无法吸引外国最优质的留学生，拿中国留学生举例，第一选择是美国，第二第三选择才是日本。大学过多也导致招生门槛降低，毕业生过多。作者推崇德国的职业教育，因材施教从小培养小孩兴趣爱好，发展不同职业培训学校，为各行各业企业源源不断输入人才。对比中国的情况，中国大学生毕业人数年年创新高，大家都挤破头进公司抢一个饭碗，有的还为了逃避现实继续考研升学，除了学习其他什么也不会，还有少数到了三十岁还在摸索自己的人生到底想做什么，为我国教育感到悲哀。中国从古至今喜欢把人分为三六九等，这种思想导致父母给孩子报考专业时，总想往当前热门职业靠拢，找光鲜亮丽的工作，完全不知道孩子究竟是不是这块料。我国最近也在往职业教育上改革，把学生分流，让他们真正去到自己合适的岗位上。 ","date":"2022-10-30","objectID":"/reading-low-desire-society/:0:0","tags":["读书笔记","日本"],"title":"读《低欲望社会》有感","uri":"/reading-low-desire-society/"},{"categories":["碎碎念"],"content":"2022.10.18 往事止于此，未来始于斯。 参与 leetcode1024活动有感马尔可夫链 ","date":"2022-10-18","objectID":"/broken-thoughts-in-october/:0:1","tags":["随想"],"title":"2022年10月-碎碎念","uri":"/broken-thoughts-in-october/"},{"categories":["碎碎念"],"content":"2022.10.19 如何阅读一份代码 ","date":"2022-10-18","objectID":"/broken-thoughts-in-october/:0:2","tags":["随想"],"title":"2022年10月-碎碎念","uri":"/broken-thoughts-in-october/"},{"categories":["碎碎念"],"content":"2022.10.20 当你过了30岁，如果你还没有 买房，结婚，生娃... 你会发现其实生活没啥压力！ 😂😂😂 ","date":"2022-10-18","objectID":"/broken-thoughts-in-october/:0:3","tags":["随想"],"title":"2022年10月-碎碎念","uri":"/broken-thoughts-in-october/"},{"categories":["碎碎念"],"content":"2022.10.21 学习多邻国800天了，给想学习外语的朋友推荐这个APP，毕竟白嫖很香🤤 800天成就达成 ","date":"2022-10-18","objectID":"/broken-thoughts-in-october/:0:4","tags":["随想"],"title":"2022年10月-碎碎念","uri":"/broken-thoughts-in-october/"},{"categories":["碎碎念"],"content":"2022.10.22 凛冬将至，长夜漫漫。 ","date":"2022-10-18","objectID":"/broken-thoughts-in-october/:0:5","tags":["随想"],"title":"2022年10月-碎碎念","uri":"/broken-thoughts-in-october/"},{"categories":["碎碎念"],"content":"2022.10.23 今天看了一部电影，感动的稀里哗啦的😭，寻梦环游记 这是一部关于死亡，家庭，梦想的动画片。 家就像一座避风港，它是你坚实的后盾，家人互相陪伴，温暖彼此。 坚持梦想很需要勇气，即使在坚持梦想的道路上与家人产生分歧，其实家人们都是默默的为你付出，在你为梦想奋斗的路上,别忘了回回头陪伴家人，他们才是你坚持下去的动力。 死亡并不可怕，比死亡更可拍的是活在世上人们的记忆里再也没有你的存在了。也许这就是你存在的意义，不断努力，产生价值，也许创造发明了什么，也许参与一场活动，或许是写了一篇blog，改变一点点让更多的人记住你。 Remember me ","date":"2022-10-18","objectID":"/broken-thoughts-in-october/:0:6","tags":["随想"],"title":"2022年10月-碎碎念","uri":"/broken-thoughts-in-october/"},{"categories":["碎碎念"],"content":"2022.10.24 今天是1024程序员节，拿到了leetcode 1024限定徽章，开心😄 ","date":"2022-10-18","objectID":"/broken-thoughts-in-october/:0:7","tags":["随想"],"title":"2022年10月-碎碎念","uri":"/broken-thoughts-in-october/"},{"categories":["碎碎念"],"content":"2022.10.25 了解深度优先搜索，广度优先搜索，到底是什么个东西。 ","date":"2022-10-18","objectID":"/broken-thoughts-in-october/:0:8","tags":["随想"],"title":"2022年10月-碎碎念","uri":"/broken-thoughts-in-october/"},{"categories":["碎碎念"],"content":"2022.10.26 把《低欲望社会》读完了，日本经济学家大前研一的著作，主要想了解日本经济，和出现低欲望社会的原因，如果说中国经济是照着日本老路走的，那么日本出现的问题，也有可能会出现在中国（比如 房地产泡沫），那么中国会出台什么政策来预防呢🧐 ","date":"2022-10-18","objectID":"/broken-thoughts-in-october/:0:9","tags":["随想"],"title":"2022年10月-碎碎念","uri":"/broken-thoughts-in-october/"},{"categories":["碎碎念"],"content":"2022.10.27 张一鸣说过”世界上只有两类书值得读,一类是传记类，一类是教科书。“张一鸣的书单 ","date":"2022-10-18","objectID":"/broken-thoughts-in-october/:0:10","tags":["随想"],"title":"2022年10月-碎碎念","uri":"/broken-thoughts-in-october/"},{"categories":["碎碎念"],"content":"2022.10.28 本来想通过github actions开发个炫酷小玩意儿，中途遇到docker COPY命令的小bug，解决完docker之后发现actions原来不支持启动docker，我的心拔凉拔凉滴。 ","date":"2022-10-18","objectID":"/broken-thoughts-in-october/:0:11","tags":["随想"],"title":"2022年10月-碎碎念","uri":"/broken-thoughts-in-october/"},{"categories":["碎碎念"],"content":"2022.10.29 做人的第一点就是要坦诚。不管是与家人，朋友，同事之间要做到坦诚相待。少装，遇到爱装的人一定要躲的远远儿的。 ","date":"2022-10-18","objectID":"/broken-thoughts-in-october/:0:12","tags":["随想"],"title":"2022年10月-碎碎念","uri":"/broken-thoughts-in-october/"},{"categories":["碎碎念"],"content":"2022.10.30 信息是分散的，把信息连接起来就变成了知识，打通不同知识领域之间桥梁就是你的智慧。 ","date":"2022-10-18","objectID":"/broken-thoughts-in-october/:0:13","tags":["随想"],"title":"2022年10月-碎碎念","uri":"/broken-thoughts-in-october/"},{"categories":["碎碎念"],"content":"2022.10.31 十月的最后一天了，如愿以偿拿到了leectcode 十月徽章。刷了一个月的题讲下几点小感受。 不能贪多，一天一道题足以，而且每天题型不同，难易程度不同，每天像拆盲盒一样。 要有时间限制不能死磕，每天两个🍅钟，第一个🍅钟看题目，按自己想法来试着写一下。第二个🍅钟看大佬的解题思路。顺着大佬的解题思路敲一遍代码。 遇到难度特别大的题不要灰心，再难的题也是由一个个小知识点拼凑的，不一定非要把题解出来才算赢，把小知识点掌握清楚了，也是一份收获。 坚持，还是坚持。虽然有补卡机制，但最好偷懒不要连续超过两天以上，不然很容易半途而废。 通过社群，相互监督，相互交流，更容易达成目标💯 ","date":"2022-10-18","objectID":"/broken-thoughts-in-october/:0:14","tags":["随想"],"title":"2022年10月-碎碎念","uri":"/broken-thoughts-in-october/"},{"categories":["阅读"],"content":"推荐指数 ❤️❤️❤️❤️ ","date":"2022-09-14","objectID":"/reading-the-sleep-revolution/:0:0","tags":["读书笔记","睡眠"],"title":"读《睡眠革命》有感","uri":"/reading-the-sleep-revolution/"},{"categories":["阅读"],"content":"关于睡眠需要知道的事 昼夜节律 生物钟，人类是早出晚归的动物，几千年来保持着日落而息，日出而作的生物规律。熬过夜班的小伙伴应该很有体会，工作熬了一通宵，身体很疲惫，但是由于早上太阳光的影响，还是很难入睡，即使入睡睡眠质量也不高。也许你能保持晚睡晚起，充足睡眠，但是你无法改变其他人的睡眠规律，为了不影响你社交还是提前入睡吧。 睡眠类型 分清楚自己睡眠类型，早睡型，晚睡型。根据类型合理分配睡眠周期。 R90睡眠周期 睡前活动 保持良好入睡习惯，做轻运动（不能做剧烈运动，会增强兴奋感，更不能入睡），做简单的家务（比如安排第二天早餐食材，洗碗之类），放空大脑远离电子产品，睡前会想当天或过去完成有意义的事，减少思绪上的焦虑。睡前3小时内尽量少喝水，睡前排光膀胱，这样有助于晚上不会被尿憋醒，影响睡眠周期。减少维生素B的服用。 午间小睡 中午1～3点午睡，下午5～7点小睡，小睡是缓解当天睡眠不足，弥补睡眠周期的好机会，使下午头脑更清醒。小睡时长30～90分钟适宜，太长会进入深度睡眠，如果这时被叫醒头脑会浑浑噩噩。 改造床铺 学会用胎儿姿势睡眠，躺向非主要的身体一侧（非惯用手的一侧）。 寻找合适自己的床垫，软硬适中，使用低过敏性，透气舒适的床上用品。床的尺寸很重要，能买多大，就买多大。 改造睡眠环境 以下改善环境几点建议 卧室是你睡觉的地方，不是你工作，娱乐的地方。 清空你的房间（哪怕只在你的脑海里），只把睡眠，修复，休息所必需的东西拿回房间。床头可以准备一杯水。 让你的房间隔离外界光源，这样室外的光线不会干扰你的睡眠。 让你的房间比家中其他地方更凉爽，但不是更寒冷。保持16～18摄氏度是最理想的。 你的房间能给你带来安全感，睡前检查门窗是否锁好，有助于营造安全感。 让房间的装饰风格保持中性，保持房间洁净，避免任何可能刺激大脑的东西（色彩鲜明的图片，活让你产生可拍联想的书籍）。 控制房间中的电子设备的使用，把手机拿出房间，或至少放在你看不见的地方（并设置成静音）。 ","date":"2022-09-14","objectID":"/reading-the-sleep-revolution/:0:1","tags":["读书笔记","睡眠"],"title":"读《睡眠革命》有感","uri":"/reading-the-sleep-revolution/"},{"categories":["阅读"],"content":"R90睡眠周期 一个睡眠周期分为90分钟， 第一阶段：非眼动睡眠。 第二阶段：浅睡眠。 第三阶段：深睡眠。 第四阶段：快速眼动睡眠。 正常普通人安排：一天5个睡眠周期，一周就会有35个睡眠周期。 尽量避免连续三个晚上缺失睡眠周期的情况。如果能够保证每周至少有4个晚上拥有完美的时间安排，就没有问题。 每天早上固定时间起床，睡前、睡醒后各流出一个睡眠周期（90分钟）做为缓冲时间带。倒推自己的入睡时间，比如早上8点半出门，中间90分钟缓冲时间，7点钟就要起床。保证5个睡眠周期前提下（7.5个小时），晚上11点半就要入睡，再往前推90分钟，10点钟就要提醒要做入睡的准备了。 关于利用睡眠周期怎么定闹钟。现在手机闹钟连续间隔5分钟闹铃十分不利于叫醒，醒来之后也浑浑噩噩的。应该利用快速眼动睡眠，先定个闹铃（用震动或声音较小），让身体先从深度睡眠过度到快速眼动睡眠里，过二十分钟再定第二个闹铃（声音开最大），这时候再起床就不会感觉到脑袋不清楚了。 ","date":"2022-09-14","objectID":"/reading-the-sleep-revolution/:0:2","tags":["读书笔记","睡眠"],"title":"读《睡眠革命》有感","uri":"/reading-the-sleep-revolution/"},{"categories":["阅读"],"content":"推荐指数 ❤️❤️❤️❤️ 到底怎么才能养成好习惯，为什么有的人坚持健身好几年，而有的人坚持几天就放弃了，一个习惯怎样才能坚持的更久，是靠意志力嘛？读了这本书中文名叫《掌控习惯》，英文名叫《Atomic Habits》，收到了很多启发。 开门见山，直接看作者的思路，然后我再根据我的理解谈谈我自己的看法。本书的核心培养习惯的四步模型：提示，渴求，反应和奖励。 人们普遍认为，想要获取某样东西，先设立一个目标，比如我想要减肥，我会设立一个目标一个月减掉5kg；还有个大家耳熟能详的“先定个小目标，赚它一个亿”，但实际上有些目标完成了，有些目标却没有完成。不知道有没有人意识到目标是关于你想要达到的结果，而体系是涉及导致这些结果的过程，作者告诉我们关注的重点是实现目标的过程，而不是最终结果，我想考100分，这是结果，但是怎么达到这100分呢，上课认真听讲，做笔记，下课按时完成作业，复习笔记内容，这才是我们要关注的，只有关注你的体系，最终也是能获得很好结果。不能死盯着目标看。 坚持目标，持续不断的投入下去，光靠意志力是不行的，总有一天会磨光你的意志力，想要坚持的更久，作者提出一个观点，给予自己一个身份，1.决定你想成为哪类人。2.用小赢证明给自己看。 下面也是本书的核心，养成习惯的四大定律，每个定律怎么应用谈谈自己的想法。 ","date":"2022-09-08","objectID":"/reading-atomic-habits/:0:0","tags":["读书笔记","习惯"],"title":"读《掌控习惯》有感","uri":"/reading-atomic-habits/"},{"categories":["阅读"],"content":"第一定律 让它显而易见 显而易见的方法有很多，手机屏保设置为目标的结果，比如想要减肥，健身，屏保可以换成彭于晏这样的型男，这样每次你解锁手机，都能看到健美的身材，提醒你要健身了。 对待不好的习惯刚好是相反的，要让它脱离你的视线，比如想要早睡，那一定不要把电子产品带入卧室，戒掉睡前玩手机的不好习惯，使你早点入睡。（目前这条很好用） 习惯叠加也很好用，当你完成某项习惯后，我将会开启新习惯。这样老的习惯做完后会提醒你做一个新的习惯，我在这点上的应用是，早上起床后，我会先洗个冷水澡（这个习惯我已经坚持两个月了），然后健身十几分，慢慢就习惯了这个组合，健身的习惯就养成了😊 ","date":"2022-09-08","objectID":"/reading-atomic-habits/:0:1","tags":["读书笔记","习惯"],"title":"读《掌控习惯》有感","uri":"/reading-atomic-habits/"},{"categories":["阅读"],"content":"第二定律 让它有吸引力 利用喜好绑定。用你喜好的行为强化你需要的动作。要给目标设定奖励机制，有奖励才会吸引你去做。这是人性。 创建一种激励仪式，在实施定频行动之前先做一件你特别喜好的事。之前之后奖励我觉得都可以，比我自己达成某个目标，我会买些好吃的奖励自己，玩些游戏放松一下都可以额。 ","date":"2022-09-08","objectID":"/reading-atomic-habits/:0:2","tags":["读书笔记","习惯"],"title":"读《掌控习惯》有感","uri":"/reading-atomic-habits/"},{"categories":["阅读"],"content":"第三定律 让它简便易行 如果你掌握一种习惯，关键是重复开始，无须力求完美，你不必描画出新习惯的每一个特征。你只需要不断练习。你需要关注的是次数。偶尔中断一次习惯，无伤大雅，总有事情计划赶不上变化，别灰心，第二天拾起习惯重新上路就好，不要有太大心理的压力。 降低启示难度，一个人一次性无法做100个俯卧撑，但是做10个就可以，间隔累计做10组就行。网上总有人会喷你你这样健身不成体系，但是我想如果一个都不做，再牛逼的体系对你来说毫无用处，先做起来，不要追求完美。 ","date":"2022-09-08","objectID":"/reading-atomic-habits/:0:3","tags":["读书笔记","习惯"],"title":"读《掌控习惯》有感","uri":"/reading-atomic-habits/"},{"categories":["阅读"],"content":"第四定律 让它令人愉悦 做力所能及，难易适中的事，似乎是保持激励水平高居不下的关键所在。 心流，不知道大家有没有体验过。当你全身心投入一件事情的时候，总感觉时间过的很快，这就达到了心流。这种感觉很奇妙，深陷其中，其实是一种正向反馈，目标达到了反馈给你成功的喜悦，这时候你就又会投入进去，这样一步一步慢慢的目标结果就达成，其中过程也很愉悦。 ","date":"2022-09-08","objectID":"/reading-atomic-habits/:0:4","tags":["读书笔记","习惯"],"title":"读《掌控习惯》有感","uri":"/reading-atomic-habits/"},{"categories":["阅读"],"content":"总结 最后用奥地利神经学家维克多·弗兰克的一句话结尾***“幸福是追求不到的，只能尾随而来。”***我们追求的是欲望，快乐来自行动。 ","date":"2022-09-08","objectID":"/reading-atomic-habits/:0:5","tags":["读书笔记","习惯"],"title":"读《掌控习惯》有感","uri":"/reading-atomic-habits/"},{"categories":["碎碎念"],"content":"2022.9.08 今天写《掌控习惯》读书笔记，没写之前想的写个读书笔记应该很快，但是写完之后足足用了3个🍅时间（一个半小时），后来有感而发。 一条朋友圈，一条微博能让你了解作者当时的想法 一篇文章，一篇blog能让你了解作者几天的思考 一本书，一部巨作能让你了解作者几年甚至一生的思考 多读书，多思考，少看短视频🤔 ","date":"2022-09-08","objectID":"/broken-thoughts-in-september/:0:1","tags":["随想"],"title":"2022年9月-碎碎念","uri":"/broken-thoughts-in-september/"},{"categories":["碎碎念"],"content":"2022.09.22 马无夜草不肥，人无横财不富。 ","date":"2022-09-08","objectID":"/broken-thoughts-in-september/:0:2","tags":["随想"],"title":"2022年9月-碎碎念","uri":"/broken-thoughts-in-september/"},{"categories":["碎碎念"],"content":"2022.09.23 恒生指数创11年新低，也是今年的新低，自动发车已提醒补仓，考虑到汇率的问题，先等等，让子弹飞一会儿🎈。 ","date":"2022-09-08","objectID":"/broken-thoughts-in-september/:0:3","tags":["随想"],"title":"2022年9月-碎碎念","uri":"/broken-thoughts-in-september/"},{"categories":["碎碎念"],"content":"2022.09.26 疯了，脑袋一团浆糊，面试题 17.19. 消失的两个数字 ","date":"2022-09-08","objectID":"/broken-thoughts-in-september/:0:4","tags":["随想"],"title":"2022年9月-碎碎念","uri":"/broken-thoughts-in-september/"},{"categories":["碎碎念"],"content":"2022.09.27 今天尝试了下云IDE，感觉非常不错，少了配置环境，即开即用，适用web前后端项目，小工具之类的，只要有网络就能通过浏览器写代码(iPad Pro当生产工具不是梦)。试用了两个平台云IDE，国内的阿里云效，和国外gitpod,阿里云在公测，免费使用。国外这个平台是50小时免费使用，我觉得目前足够了，个人版100个小时，9美金。也可以自建费用更低（代码开源源码）。自建以后再研究吧。 ","date":"2022-09-08","objectID":"/broken-thoughts-in-september/:0:5","tags":["随想"],"title":"2022年9月-碎碎念","uri":"/broken-thoughts-in-september/"},{"categories":null,"content":"🎉🎉🎉值得记录下，博客由以前的WordPress换成Hugo，其中心酸路程，只有自己懂得💦。下次记录下本网站的的搭建过程，欢迎关注👀 ","date":"2022-08-31","objectID":"/blog-test/:0:0","tags":null,"title":"乔迁之喜，博客换新家","uri":"/blog-test/"},{"categories":["阅读"],"content":" 外国版厚黑学，刷新了部分认知，各种勾心斗角，明争暗斗，害人之心不可有，防人之心不可无，多看看也没有坏处，48种权利法则如下： 永远不要盖过上司的光芒。 永远不要太信任朋友，学会如何利用敌人。 隐藏你的意图。 说的永远比需要的少。 不惜用生命捍卫你的名誉。 不惜代价，引人注目。 让别人为你效劳，将功劳记在自己名下。 让他人自投罗网——必要时使用诱饵。 要用行动取胜，莫靠辩论争赢。 回避不快乐和不幸之人。 学会保持别人对你的依赖。 有选择地运用诚实与宽大，让对手放下武器。 请求帮忙时，诉诸对方的 自身利益，千万不要去恳求慈悲或感恩。 装成朋友的姿态，进行间谍的工作。 彻底根除你的敌人。 利用缺席让人们更尊重你，抬高自己的声望。 让别人战战兢兢，营造高深莫测的氛围。 不要筑起堡垒自我防御——孤立是危险的。 弄清楚你要对付的人——千万不要搞错对象，冒犯不该冒犯的人。 不要依附于任何人。 假装比你的对手还要傻——借愚取胜。 运用投降的策略：将弱势逐渐转化为力量。 凝聚你的力量。 扮演完美的朝臣。 重新塑造你的形象。 洁身自好，保持清白。 操控人们需要信仰追求的弱点，制造一群追随者。 行动时要大胆。 全盘考虑，计划到结局。 让成就的取得，显得不费吹灰之力。 掌控选择权：让别人玩你发的牌。 利用民众的梦想。 找出每个人的缺点。 要让别人像对待君王一样对你，你首先要表现得像个君王。 学习掌控时间的艺术。 鄙视那些你得不到的东西，忽视它们是最好的报复手段。 制造令人过目不忘的外在表现。 想法可以自由，行为要随大众。 搅动池水，才好混水摸鱼。 蔑视免费的午餐。 尽量避免继承伟人的衣钵。 攻击牧羊人，羊群就会四处奔跑。 致力于他人的情感与心灵。 运用镜子效应解除敌人武装和激怒敌人。 鼓吹改革的需要，但是不要一次改革太多。 不要表现的过于完美。 不要超越你瞄准的目标，在胜利中，学会适时停手。 顺应变化，以无形胜有形。 本书各别法则，前后存在冲突，比如“扮演完美的朝臣”，到后面又建议“不要表现过于完美”，每条法则都有各自的适用场景，不能死脑筋，灵活运用。 不过本书第一条和最后一条，在职场中确实很重要😊。 ","date":"2022-08-25","objectID":"/reading-the-48-laws-of-power/:0:0","tags":["读书笔记","厚黑学"],"title":"读《权利48法则》有感","uri":"/reading-the-48-laws-of-power/"},{"categories":["开发"],"content":"第一种方式playsound ","date":"2022-03-29","objectID":"/play-audio-.mp3-format-using-python/:1:0","tags":["Python"],"title":"使用python播放音频（.mp3格式）","uri":"/play-audio-.mp3-format-using-python/"},{"categories":["开发"],"content":"1.安装依赖包 pip install playsound ","date":"2022-03-29","objectID":"/play-audio-.mp3-format-using-python/:1:1","tags":["Python"],"title":"使用python播放音频（.mp3格式）","uri":"/play-audio-.mp3-format-using-python/"},{"categories":["开发"],"content":"2.使用 from playsound import playsound playsound('your music file path') print('music play finished') ","date":"2022-03-29","objectID":"/play-audio-.mp3-format-using-python/:1:2","tags":["Python"],"title":"使用python播放音频（.mp3格式）","uri":"/play-audio-.mp3-format-using-python/"},{"categories":["开发"],"content":"第二种方式pygame.mixer.music(推荐使用) 推荐理由，用这个库可以控制播放的音乐，比如暂停，停止，调节声音大小等 ","date":"2022-03-29","objectID":"/play-audio-.mp3-format-using-python/:2:0","tags":["Python"],"title":"使用python播放音频（.mp3格式）","uri":"/play-audio-.mp3-format-using-python/"},{"categories":["开发"],"content":"1.安装依赖包 pip install pygame ","date":"2022-03-29","objectID":"/play-audio-.mp3-format-using-python/:2:1","tags":["Python"],"title":"使用python播放音频（.mp3格式）","uri":"/play-audio-.mp3-format-using-python/"},{"categories":["开发"],"content":"2.使用 from ast import While import pygame \"\"\"初始化pygame\"\"\" pygame.mixer.init() \"\"\"加载音乐文件\"\"\" pygame.mixer.music.load('your music file path') \"\"\"设置音量\"\"\" pygame.mixer.music.set_volume(0.2) \"\"\"播放音乐\"\"\" pygame.mixer.music.play() \"\"\"播放完成再结束\"\"\" while pygame.mixer.music.get_busy(): pass print('播放结束') ","date":"2022-03-29","objectID":"/play-audio-.mp3-format-using-python/:2:2","tags":["Python"],"title":"使用python播放音频（.mp3格式）","uri":"/play-audio-.mp3-format-using-python/"},{"categories":["开发"],"content":"在网上下了个python脚本，第一个问题如何安装包， 在使用pip 命令行，出现的问题记录下（针对Windows用户） ","date":"2022-03-24","objectID":"/record-the-pits-stepped-on-when-pip-installs-modules/:0:0","tags":["Python"],"title":"记录pip安装模块时踩过的坑","uri":"/record-the-pits-stepped-on-when-pip-installs-modules/"},{"categories":["开发"],"content":"1.pip源更换为国内镜像 国内pip镜像源,全部使用https 阿里云 https://mirrors.aliyun.com/pypi/simple 中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple 豆瓣(douban) https://pypi.douban.com/simple 清华大学 https://pypi.tuna.tsinghua.edu.cn/simple 中国科学技术大学 https://pypi.mirrors.ustc.edu.cn/simple 更换方法，本人使用windows操作系统 在C:\\Users\\你的用户名 ，在这个目录下创建pip文件夹，然后在pip目录下创建pip.ini文件，文件内容如下 [global] index-url = https://pypi.mirrors.ustc.edu.cn/simple [install] trusted-host = pypi.mirrors.ustc.edu.cn 按照此上述操作不会再报以下错误 Could not fetch URL https://mirrors.aliyun.com/pypi/simple/pip/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='mirrors.aliyun.com', port=443): Max retries exceeded with url: /pypi/simple/pip/ (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:997)'))) - skipping 如果还出错请关闭翻墙代理软件！！！ ","date":"2022-03-24","objectID":"/record-the-pits-stepped-on-when-pip-installs-modules/:1:0","tags":["Python"],"title":"记录pip安装模块时踩过的坑","uri":"/record-the-pits-stepped-on-when-pip-installs-modules/"},{"categories":["开发"],"content":"2.安装 Microsoft Visual C++ Build Tools 问题报错如下 distutils.errors.DistutilsPlatformError: Microsoft Visual C++ 14.0 or greater is required. Get it with \"Microsoft C++ Build Tools\": https://visualstudio.microsoft.com/visual-cpp-build-tools/ Testing support for clang 就是提示你需要安装 Microsoft Visual C++ Build Tools 了。 这是网址 https://visualstudio.microsoft.com/visual-cpp-build-tools/ ","date":"2022-03-24","objectID":"/record-the-pits-stepped-on-when-pip-installs-modules/:2:0","tags":["Python"],"title":"记录pip安装模块时踩过的坑","uri":"/record-the-pits-stepped-on-when-pip-installs-modules/"},{"categories":["阅读"],"content":"老华是谁？80后创业达人，早年出国新西兰留学，为赚生活费，去餐馆打过黑工，跑过外卖，找到二手车生意赚取了人生第一桶金，商业嗅觉灵敏开碟店，扩大经营时发现电子产品如MP3，内存卡暴利，随即开始在网上销售，更是赚的盆满钵满。毕业回国，初入股市，投资不当损失惨重，准备东山再起。进入民企学习，卧薪尝胆，发现桌游市场，但由于战略失误，大学城附近开店（学生消费能力低）赚取不到利润，还消耗精力，随即放弃。再遇新西兰友人，发现验货商机，模式复制全国。再回新西兰发现油画市场，更加暴利。后回国创业，成立米课，一家外贸培训网站，期间拜访了一些国内VC。现在在抖音上直播，答疑解惑，帮助创业人整理思维逻辑。以下是本书中的一些笔记，亲供参考。 执行力 新西兰卖车，找到套利空间，执行并断验证自己想法是否成功。坚持低买高卖原则，并提供优质服务。后期在广交会上推广自己的验货渠道，使用简易手提袋，边想边做，效果很不错。 卖碟 不要和生意谈恋爱。分清楚项目是短期还是长久的。千万不能自欺欺人。 竞价模式，利用人性归属感，获取利润。知彼知己，分析对手，提供差异化，同质化是没有高利润的。再普通的产品也能做出差异化。 一个人，想要优秀，你必须接受挑战。 把行业来龙去脉搞通，创业成功概率才会大增。年轻人一定要有积累！！！ 老华说：“对年轻人来说，资金，学历，项目我觉得都不重要，最重要的就是你要有往上爬的冲劲，有了这种力量和激情，很多困难都可以解决，这才是我的核心竞争力。” 创业，投资之前都要做很多功课。 毛利低，总净利润不低，依靠“周转率”获得高利润。比如苏宁，沃尔玛。 刚进入新公司言多必失，尽职做好自己的同时，也一定要观察清楚周边情况。 创业团队危机 团队对你失去了信心，比如你能力不够，无法带领他们看到曙光。 你不会分钱，不会分利润，别人给你干活，干得多的和干得少的没区别，甚至什么都不干的还能被提拔，赏罚不明晰。 鸡血打太多，指望自己不付出，让员工给你卖命，工资待遇差。 商业模式基本点 产品定位 目标市场 销售推广 生产 定价-收入模式 成本 竞争 市场大小 决定公司是否能走的长久最关键的因素就是团队，人太重要了！在创业阶段，要做将帅之才。将才（短期思考+执行），帅才（长期思考+管理） 公司发展的好不好有两点可以看，第一有没有人冲着你的公司来。第二有没有人挖你的员工。 股市有风险的，不管这个人在其他行业干的如何，在没有自己的一套研究理论之前，始终是被割的韭菜，（华哥，09年在股市亏损500w有感），做个投资者而不是投机者。 华哥看投行的投资偏好和习惯 项目市场空间要大，天花板要高。 公司可以不盈利，但增长率要快，快速占据市场老大地位。 大部分基金偏爱移动互联网。 投资额度尽量要大。鸡蛋放在不同篮子里，只要有一个成了其他不用考虑成败。 投资回报率要高，否则没意义。 投行看不上分红。 持续垫高壁垒，挡住你的竞争对手。做一个善于堆高壁垒的人，做一家不容易被模仿的企业，才是在商场上立足的关键。 作为年轻人，可能没有钱，没有资源，有的就是选择权！这就是年轻人的优势，30多岁如果工作还不错，不太可能出来创业，成不太大了，万一失败，很多人再回去工作可能就拿不到之前的收入，所以即便在公司发张前景一般，为了安定也会选择继续干下去。（貌似说的就是我，留给我的时间真的不多了） 品牌传播，好的产品自然会产生好的口碑，用户会帮你宣传。 附录 学会深度思考。充分的思考带来的行动看似非常简单的，但这简单的行动背后有复杂的逻辑。 如果你可投资的金额少于100万元，我不建议你投资，你花时间在工作上产出会更大。千万千万别融资，估值+时间这两样才是投资的金钥匙。 ","date":"2022-03-20","objectID":"/feelings-after-reading-mr.hua-entrepreneurship-notes/:0:0","tags":["读书笔记","传记"],"title":"读《MR.HUA 创业手记》有感","uri":"/feelings-after-reading-mr.hua-entrepreneurship-notes/"},{"categories":["碎碎念"],"content":"很久没有写blog了，荒废了很久… 今天看了下服务器续费的钱，人直接傻了，这些云服务器厂商简直像是在抢钱，续费一年顶我刚开始买三年的。 想了下，今年多多写blog，建立起个人品牌，以后我会分享我在读的书，看到过比较好的视频，投资与健康，英语学习的一些方法，对了，还有我的主业技术上的分享，web3.0之前也研究了一些。 欢迎大家能多多提意见，让我们成为更好的自己。 ","date":"2022-03-03","objectID":"/abandoned-blog/:0:0","tags":["随想"],"title":"荒废的Blog","uri":"/abandoned-blog/"},{"categories":["开发"],"content":"在项目中经常会用if..else…去判断逻辑，当业务越来越复杂，一个逻辑会有大量的判断，如下面的代码 if(type.equals(\"o1\")){ // 执行o1逻辑 }else if(type.equals(\"o2\")){ // 执行o2逻辑 }else if(type.equals(\"o3\")){ // 执行o3逻辑 }else if(type.equals(\"o4\")){ // 执行o4逻辑 }else if(type.equals(\"o5\")){ // 执行o5逻辑 } 后面再增加逻辑o6,o7…一直到o99呢，这样写代码就会越写越长，后期越来越复杂，维护越来越难，嗯，已经闻到坏代码的味道，优化它。 首先想是否能通过设计模式来解决呢？ ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:0:0","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"1.策略模式 策略模式：一个类的行为或其他算法可以在运行时更改。这种类型的设计模式属于行为型模式。 在策略模式中，我们创建表示各种策略的对象和一个行为随着策略对象改变而改变context对象。策略对象改变context对象的执行算法。 关键词：实现同一个接口 那如何实现策略模式呢？ 我们把上面大量if…else…的代码，用策略模式来实现下 ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:1:0","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"1.1首先创建一个接口 public interface Strategy{ public void doSomething(); } ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:1:1","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"1.2.实现接口的类 public class OperationO1 implements Strategy{ @Override public void doSomething(){ System.out.println(\"执行o1逻辑。\"); } } public class OperationO2 implements Strategy{ @Override public void doSomething(){ System.out.println(\"执行o2逻辑。\"); } } public class OperationO3 implements Strategy{ @Override public void doSomething(){ System.out.println(\"执行o3逻辑。\"); } } ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:1:2","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"1.3.创建Context类 public class Conetext(){ private Strategy strategy; public Conetext(Strategy strategy){ this.strategy = strategy; } public void operation(){ strategy.doSomething(); } } ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:1:3","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"1.4.验证 public class Test{ public static void main(String[] args){ Conetext conetext = new Conetext(new OperationO1()); conetext.operation(); conetext = new Conetext(new OperationO2()); conetext.operation(); conetext = new Conetext(new OperationO3()); conetext.operation(); } } 执行打印 执行o1逻辑。 执行o2逻辑。 执行o3逻辑。 ok，策略模式代码已经实现了，发现唉不对啊，这好像更if…else没有什么关系？下面来演示在项目中的实战。 ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:1:4","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"2.表驱动 这就要引出另一个词表驱动 表驱动法，又称之为表驱动、表驱动方法。 “表”是几乎所有数据结构课本都要讨论的非常有用的数据结构。表驱动方法出于特定的目的来使用表，程序员们经常谈到“表驱动”方法，但是课本中却从未提到过什么是\"表驱动\"方法。表驱动方法是一种使你可以在表中查找信息，而不必用很多的逻辑语句（if或Case）来把它们找出来的方法。事实上，任何信息都可以通过表来挑选。在简单的情况下，逻辑语句往往更简单而且更直接。但随着逻辑链的复杂，表就变得越来越富有吸引力了。 表驱动+策略模式 ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:2:0","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"2.1.新增策略管理类 @Component public class StrategyManager { private Map\u003cString,Strategy\u003e dispatcher = new HashMap\u003c\u003e(); @PostConstruct private void initDispatcher(){ dispatcher.put(\"o1\",new OperationO1()); dispatcher.put(\"o2\",new OperationO2()); dispatcher.put(\"o3\",new OperationO3()); } public void doStrategy(String type) throws Exception{ Strategy strategy = dispatcher.get(type); if(strategy != null){ strategy.doSomething(); } else { throw new Exception(\"未找到业务策略。\"); } } } ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:2:1","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"2.2.注入并使用 @Autowired private StrategyManager strategyManager; public void test(String type){ strategyManager.doStrategy(type); } 后期再添加新策略，只要在策略管理类中添加新增策略的实现类。 ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:2:2","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"总结 最后记住一下秘诀 互斥条件表驱动， 嵌套条件校验链， 短路条件早return， 零散条件可组合。 ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:3:0","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["运维"],"content":"1.下载Nginx http://nginx.org/en/download.html ","date":"2020-12-04","objectID":"/linux-installation-and-deployment-of-nginx/:1:0","tags":["Linux","Nginx"],"title":"Linux安装部署Nginx","uri":"/linux-installation-and-deployment-of-nginx/"},{"categories":["运维"],"content":"2.上传到服务器上 解压 tar -xzf nginx-1.16.1.tar.gz ","date":"2020-12-04","objectID":"/linux-installation-and-deployment-of-nginx/:2:0","tags":["Linux","Nginx"],"title":"Linux安装部署Nginx","uri":"/linux-installation-and-deployment-of-nginx/"},{"categories":["运维"],"content":"3.安装 进入nginx 解压后的目录并执行 ./configure nginx会自动检查运行nginx所需要的库 其中这些库必须要安装 gcc++：nginx 编译需要这个库 PCRE：nginx 的http模块使用pcre库来解析正则表达式 zlib：zlib库提供很多解压和压缩的方式 OpenSSL：nginx支持http, https协议，OpenSSL库提供了常用的密钥和证书封装管理功能及SSL协议 安装 gcc++ yum install gcc-c++ 安装 PCRE yum install pcre pcre-devel 安装 zlib yum install zlib zlib-devel 安装 OpenSSL yum install openssl openssl-devel 编译nginx make make install ","date":"2020-12-04","objectID":"/linux-installation-and-deployment-of-nginx/:3:0","tags":["Linux","Nginx"],"title":"Linux安装部署Nginx","uri":"/linux-installation-and-deployment-of-nginx/"},{"categories":["运维"],"content":"4.启动、停止Nginx cd /usr/local/nginx/sbin/ ./nginx # 启动 ./nginx -s stop # 强制停止 ./nginx -s quit # 停止 （任务处理完停止） ./nginx -s reload # 重新加载配置 查询nginx进程 ps -ef|grep nginx ","date":"2020-12-04","objectID":"/linux-installation-and-deployment-of-nginx/:4:0","tags":["Linux","Nginx"],"title":"Linux安装部署Nginx","uri":"/linux-installation-and-deployment-of-nginx/"},{"categories":["运维"],"content":"5.遇到的问题 ","date":"2020-12-04","objectID":"/linux-installation-and-deployment-of-nginx/:5:0","tags":["Linux","Nginx"],"title":"Linux安装部署Nginx","uri":"/linux-installation-and-deployment-of-nginx/"},{"categories":["运维"],"content":"1.启动完成后，访问80端口被拒绝 检查本地80端口服务是否正常 curl 127.0.0.1 通过curl 命令检查是否有返回，有返回说明服务正常 检查防火墙端口是否打开 firewall-cmd --zone=public --query-port=80/tcp 返回 yes 说明打开，no说明关闭 打开防火墙 80端口 firewall-cmd --zone=public --add-port=80/tcp --permanent –permanent 永久生效，没有此参数重启后失效 重新载入 firewall-cmd --reload ","date":"2020-12-04","objectID":"/linux-installation-and-deployment-of-nginx/:5:1","tags":["Linux","Nginx"],"title":"Linux安装部署Nginx","uri":"/linux-installation-and-deployment-of-nginx/"},{"categories":["运维"],"content":"1.环境准备 64位Linux操作系统 64位JDK1.8+ ","date":"2020-11-16","objectID":"/install-and-deploy-nacos-in-linux-environment/:1:0","tags":["Linux","Nacos"],"title":"Linux 环境下安装、部署Nacos","uri":"/install-and-deploy-nacos-in-linux-environment/"},{"categories":["运维"],"content":"2.下载源码或安装包 https://github.com/alibaba/nacos/releases ","date":"2020-11-16","objectID":"/install-and-deploy-nacos-in-linux-environment/:2:0","tags":["Linux","Nacos"],"title":"Linux 环境下安装、部署Nacos","uri":"/install-and-deploy-nacos-in-linux-environment/"},{"categories":["运维"],"content":"3.启动、关闭命令 sh startup.sh -m standalone # 单机模式启动命令 sh shutdown.sh # 关闭命令 ","date":"2020-11-16","objectID":"/install-and-deploy-nacos-in-linux-environment/:3:0","tags":["Linux","Nacos"],"title":"Linux 环境下安装、部署Nacos","uri":"/install-and-deploy-nacos-in-linux-environment/"},{"categories":["运维"],"content":"出现的问题 运行脚本报错：syntax error near unexpected token `$’{\\r’ 这是由于项目是在Windows系统下编译，文件格式是DOC格式，与UNIX格式不符。需要把脚本文件格式改为UNIX格式。 打开脚本文件，用vi打开 vi startup.sh 输入 :set ff=unix ","date":"2020-11-16","objectID":"/install-and-deploy-nacos-in-linux-environment/:4:0","tags":["Linux","Nacos"],"title":"Linux 环境下安装、部署Nacos","uri":"/install-and-deploy-nacos-in-linux-environment/"},{"categories":["运维"],"content":"1.环境配置 64位 Linux操作系统 64位 JDK1.8+ RocketMQ二进制版本 http://rocketmq.apache.org/dowloading/releases/ ","date":"2020-11-10","objectID":"/how-to-install-and-deploy-rocketmq-in-linux/:1:0","tags":["Linux","RocketMQ"],"title":"Linux如何安装、部署RocketMQ","uri":"/how-to-install-and-deploy-rocketmq-in-linux/"},{"categories":["运维"],"content":"2.修改RocketMQ内存配置 修改runserver.sh、runbbroker.sh JAVA_OPT=\"${JAVA_OPT} -server -Xms8g -Xmx8g -Xmn4g\" 修改为 JAVA_OPT=\"${JAVA_OPT} -server -Xms256m -Xmx256m -Xmn128m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m\" ","date":"2020-11-10","objectID":"/how-to-install-and-deploy-rocketmq-in-linux/:2:0","tags":["Linux","RocketMQ"],"title":"Linux如何安装、部署RocketMQ","uri":"/how-to-install-and-deploy-rocketmq-in-linux/"},{"categories":["运维"],"content":"3.启动服务 Start Name Server nohup sh bin/mqnamesrv \u0026 tail -f ~/logs/rocketmqlogs/namesrv.log 启动成功 The Name Server boot success... Start Broker nohup sh bin/mqbroker -n localhost:9876 \u0026 tail -f ~/logs/rocketmqlogs/broker.log 启动成功 The broker[%s, 172.30.30.233:10911] boot success... ","date":"2020-11-10","objectID":"/how-to-install-and-deploy-rocketmq-in-linux/:3:0","tags":["Linux","RocketMQ"],"title":"Linux如何安装、部署RocketMQ","uri":"/how-to-install-and-deploy-rocketmq-in-linux/"},{"categories":["运维"],"content":"4.部署可视化服务 java -jar rocketmq-console-ng-1.0.1.jar --rocketmq.config.namesrvAddr='135.224.85.5:9876' ","date":"2020-11-10","objectID":"/how-to-install-and-deploy-rocketmq-in-linux/:4:0","tags":["Linux","RocketMQ"],"title":"Linux如何安装、部署RocketMQ","uri":"/how-to-install-and-deploy-rocketmq-in-linux/"},{"categories":["运维"],"content":"5.停止服务 关闭namesrv服务 sh bin/mqshutdown namesrv 关闭broker服务 sh bin/mqshutdown broker ","date":"2020-11-10","objectID":"/how-to-install-and-deploy-rocketmq-in-linux/:5:0","tags":["Linux","RocketMQ"],"title":"Linux如何安装、部署RocketMQ","uri":"/how-to-install-and-deploy-rocketmq-in-linux/"},{"categories":["运维"],"content":"1.下载Redis http://www.redis.cn/download.html 下载相应redis版本，并上传到服务器上 ","date":"2020-11-07","objectID":"/linux-installation-and-deployment-of-redis-single-machine/:1:0","tags":["Linux","Redis"],"title":"Linux 安装、部署Redis（单机）","uri":"/linux-installation-and-deployment-of-redis-single-machine/"},{"categories":["运维"],"content":"2.安装 解压，编译 tar -xzf redis-5.0.5.tar.gz cd redis-5.0.5 make 编译完成后，通过如下命令开启Redis src/redis-server ","date":"2020-11-07","objectID":"/linux-installation-and-deployment-of-redis-single-machine/:2:0","tags":["Linux","Redis"],"title":"Linux 安装、部署Redis（单机）","uri":"/linux-installation-and-deployment-of-redis-single-machine/"},{"categories":["运维"],"content":"3.设置Redis远程连接，后台启动，设置密码 打开配置文件 vi redis.conf 设置后台启动 daemonize yes # no 修改为 yes 设置远程连接 bind 135.224.85.5 # 修改为主机ip protected-mode no # yes 修改为 no 设置密码 requirepass 123456 # 设置密码为123456 ","date":"2020-11-07","objectID":"/linux-installation-and-deployment-of-redis-single-machine/:3:0","tags":["Linux","Redis"],"title":"Linux 安装、部署Redis（单机）","uri":"/linux-installation-and-deployment-of-redis-single-machine/"},{"categories":["运维"],"content":"4.重新开启Redis 关闭Redis命令 lsof -i :6379 # 找到对应的pid kill -9 XXXX # 杀掉对应的pid进程 重启Redis命令 src/redis-server redis.conf # 进入redis目录下 ","date":"2020-11-07","objectID":"/linux-installation-and-deployment-of-redis-single-machine/:4:0","tags":["Linux","Redis"],"title":"Linux 安装、部署Redis（单机）","uri":"/linux-installation-and-deployment-of-redis-single-machine/"},{"categories":["运维"],"content":"1.下载JDK 根据需求下载不同版本的JDK openJDK http://hg.openjdk.java.net/ OracleJDK https://www.oracle.com/technetwork/java/archive-139210.html ","date":"2020-11-05","objectID":"/how-to-install-jdk-in-linux-environment/:1:0","tags":["Linux","Java"],"title":"Linux环境下如何安装JDK","uri":"/how-to-install-jdk-in-linux-environment/"},{"categories":["运维"],"content":"2. 上传至服务器并解压 上传至服务器相应的目录下 使用 tar zxvf 命令解压 ","date":"2020-11-05","objectID":"/how-to-install-jdk-in-linux-environment/:2:0","tags":["Linux","Java"],"title":"Linux环境下如何安装JDK","uri":"/how-to-install-jdk-in-linux-environment/"},{"categories":["运维"],"content":"3. 配置环境变量 配置当前用户下的环境变量 vi ~/.bash_profile #在末尾加上 JAVA_HOME=/home/jenkinsadmin/jdk1.8.0_144 #此处应为jdk的解压目录 CLASSPATH=.:$JAVA_HOME/bin/tools.jar PATH=$JAVA_HOME/bin:$PATH export JAVA_HOME CLASSPATH PATH ","date":"2020-11-05","objectID":"/how-to-install-jdk-in-linux-environment/:3:0","tags":["Linux","Java"],"title":"Linux环境下如何安装JDK","uri":"/how-to-install-jdk-in-linux-environment/"},{"categories":["运维"],"content":"4.使环境变量文件生效 java -version 返回结果如下，说明修改成功 openjdk version \"1.8.0_40\" OpenJDK Runtime Environment (build 1.8.0_40-b25) OpenJDK 64-Bit Server VM (build 25.40-b25, mixed mode) ","date":"2020-11-05","objectID":"/how-to-install-jdk-in-linux-environment/:4:0","tags":["Linux","Java"],"title":"Linux环境下如何安装JDK","uri":"/how-to-install-jdk-in-linux-environment/"}]