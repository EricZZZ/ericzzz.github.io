[{"categories":["阅读"],"content":"推荐指数 ❤️❤️❤️❤️ 到底怎么才能养成好习惯，为什么有的人坚持健身好几年，而有的人坚持几天就放弃了，一个习惯怎样才能坚持的更久，是靠意志力嘛？读了这本书中文名叫《掌控习惯》，英文名叫《Atomic Habits》，收到了很多启发。 开门见山，直接看作者的思路，然后我再根据我的理解谈谈我自己的看法。本书的核心培养习惯的四步模型：提示，渴求，反应和奖励。 人们普遍认为，想要获取某样东西，先设立一个目标，比如我想要减肥，我会设立一个目标一个月减掉5kg；还有个大家耳熟能详的“先定个小目标，赚它一个亿”，但实际上有些目标完成了，有些目标却没有完成。不知道有没有人意识到目标是关于你想要达到的结果，而体系是涉及导致这些结果的过程，作者告诉我们关注的重点是实现目标的过程，而不是最终结果，我想考100分，这是结果，但是怎么达到这100分呢，上课认真听讲，做笔记，下课按时完成作业，复习笔记内容，这才是我们要关注的，只有关注你的体系，最终也是能获得很好结果。不能死盯着目标看。 坚持目标，持续不断的投入下去，光靠意志力是不行的，总有一天会磨光你的意志力，想要坚持的更久，作者提出一个观点，给予自己一个身份，1.决定你想成为哪类人。2.用小赢证明给自己看。 下面也是本书的核心，养成习惯的四大定律，每个定律怎么应用谈谈自己的想法。 ","date":"2022-09-08","objectID":"/reading-atomic-habits/:0:0","tags":["读书笔记","习惯"],"title":"读《掌控习惯》有感","uri":"/reading-atomic-habits/"},{"categories":["阅读"],"content":"第一定律 让它显而易见 显而易见的方法有很多，手机屏保设置为目标的结果，比如想要减肥，健身，屏保可以换成彭于晏这样的型男，这样每次你解锁手机，都能看到健美的身材，提醒你要健身了。 对待不好的习惯刚好是相反的，要让它脱离你的视线，比如想要早睡，那一定不要把电子产品带入卧室，戒掉睡前玩手机的不好习惯，使你早点入睡。（目前这条很好用） 习惯叠加也很好用，当你完成某项习惯后，我将会开启新习惯。这样老的习惯做完后会提醒你做一个新的习惯，我在这点上的应用是，早上起床后，我会先洗个冷水澡（这个习惯我已经坚持两个月了），然后健身十几分，慢慢就习惯了这个组合，健身的习惯就养成了😊 ","date":"2022-09-08","objectID":"/reading-atomic-habits/:0:1","tags":["读书笔记","习惯"],"title":"读《掌控习惯》有感","uri":"/reading-atomic-habits/"},{"categories":["阅读"],"content":"第二定律 让它有吸引力 利用喜好绑定。用你喜好的行为强化你需要的动作。要给目标设定奖励机制，有奖励才会吸引你去做。这是人性。 创建一种激励仪式，在实施定频行动之前先做一件你特别喜好的事。之前之后奖励我觉得都可以，比我自己达成某个目标，我会买些好吃的奖励自己，玩些游戏放松一下都可以额。 ","date":"2022-09-08","objectID":"/reading-atomic-habits/:0:2","tags":["读书笔记","习惯"],"title":"读《掌控习惯》有感","uri":"/reading-atomic-habits/"},{"categories":["阅读"],"content":"第三定律 让它简便易行 如果你掌握一种习惯，关键是重复开始，无须力求完美，你不必描画出新习惯的每一个特征。你只需要不断练习。你需要关注的是次数。偶尔中断一次习惯，无伤大雅，总有事情计划赶不上变化，别灰心，第二天拾起习惯重新上路就好，不要有太大心理的压力。 降低启示难度，一个人一次性无法做100个俯卧撑，但是做10个就可以，间隔累计做10组就行。网上总有人会喷你你这样健身不成体系，但是我想如果一个都不做，再牛逼的体系对你来说毫无用处，先做起来，不要追求完美。 ","date":"2022-09-08","objectID":"/reading-atomic-habits/:0:3","tags":["读书笔记","习惯"],"title":"读《掌控习惯》有感","uri":"/reading-atomic-habits/"},{"categories":["阅读"],"content":"第四定律 让它令人愉悦 做力所能及，难易适中的事，似乎是保持激励水平高居不下的关键所在。 心流，不知道大家有没有体验过。当你全身心投入一件事情的时候，总感觉时间过的很快，这就达到了心流。这种感觉很奇妙，深陷其中，其实是一种正向反馈，目标达到了反馈给你成功的喜悦，这时候你就又会投入进去，这样一步一步慢慢的目标结果就达成，其中过程也很愉悦。 ","date":"2022-09-08","objectID":"/reading-atomic-habits/:0:4","tags":["读书笔记","习惯"],"title":"读《掌控习惯》有感","uri":"/reading-atomic-habits/"},{"categories":["阅读"],"content":"总结 最后用奥地利神经学家维克多·弗兰克的一句话结尾***“幸福是追求不到的，只能尾随而来。”***我们追求的是欲望，快乐来自行动。 ","date":"2022-09-08","objectID":"/reading-atomic-habits/:0:5","tags":["读书笔记","习惯"],"title":"读《掌控习惯》有感","uri":"/reading-atomic-habits/"},{"categories":["碎碎念"],"content":"2022.9.8 今天写《掌控习惯》读书笔记，没写之前想的写个读书笔记应该很快，但是写完之后足足用了3个🍅时间（一个半小时），后来有感而发。 一条朋友圈，一条微博能让你了解作者当时的想法 一篇文章，一篇blog能让你了解作者几天的思考 一本书，一部巨作能让你了解作者几年甚至一生的思考 多读书，多思考，少看短视频🤔 ","date":"2022-09-08","objectID":"/broken-thoughts-in-september/:0:1","tags":["随想"],"title":"2022年9月-碎碎念","uri":"/broken-thoughts-in-september/"},{"categories":null,"content":"🎉🎉🎉值得记录下，博客由以前的WordPress换成Hugo，其中心酸路程，只有自己懂得💦。下次记录下本网站的的搭建过程，欢迎关注👀 ","date":"2022-08-31","objectID":"/blog-test/:0:0","tags":null,"title":"乔迁之喜，博客换新家","uri":"/blog-test/"},{"categories":["阅读"],"content":" 外国版厚黑学，刷新了部分认知，各种勾心斗角，明争暗斗，害人之心不可有，防人之心不可无，多看看也没有坏处，48种权利法则如下： 永远不要盖过上司的光芒。 永远不要太信任朋友，学会如何利用敌人。 隐藏你的意图。 说的永远比需要的少。 不惜用生命捍卫你的名誉。 不惜代价，引人注目。 让别人为你效劳，将功劳记在自己名下。 让他人自投罗网——必要时使用诱饵。 要用行动取胜，莫靠辩论争赢。 回避不快乐和不幸之人。 学会保持别人对你的依赖。 有选择地运用诚实与宽大，让对手放下武器。 请求帮忙时，诉诸对方的 自身利益，千万不要去恳求慈悲或感恩。 装成朋友的姿态，进行间谍的工作。 彻底根除你的敌人。 利用缺席让人们更尊重你，抬高自己的声望。 让别人战战兢兢，营造高深莫测的氛围。 不要筑起堡垒自我防御——孤立是危险的。 弄清楚你要对付的人——千万不要搞错对象，冒犯不该冒犯的人。 不要依附于任何人。 假装比你的对手还要傻——借愚取胜。 运用投降的策略：将弱势逐渐转化为力量。 凝聚你的力量。 扮演完美的朝臣。 重新塑造你的形象。 洁身自好，保持清白。 操控人们需要信仰追求的弱点，制造一群追随者。 行动时要大胆。 全盘考虑，计划到结局。 让成就的取得，显得不费吹灰之力。 掌控选择权：让别人玩你发的牌。 利用民众的梦想。 找出每个人的缺点。 要让别人像对待君王一样对你，你首先要表现得像个君王。 学习掌控时间的艺术。 鄙视那些你得不到的东西，忽视它们是最好的报复手段。 制造令人过目不忘的外在表现。 想法可以自由，行为要随大众。 搅动池水，才好混水摸鱼。 蔑视免费的午餐。 尽量避免继承伟人的衣钵。 攻击牧羊人，羊群就会四处奔跑。 致力于他人的情感与心灵。 运用镜子效应解除敌人武装和激怒敌人。 鼓吹改革的需要，但是不要一次改革太多。 不要表现的过于完美。 不要超越你瞄准的目标，在胜利中，学会适时停手。 顺应变化，以无形胜有形。 本书各别法则，前后存在冲突，比如“扮演完美的朝臣”，到后面又建议“不要表现过于完美”，每条法则都有各自的适用场景，不能死脑筋，灵活运用。 不过本书第一条和最后一条，在职场中确实很重要😊。 ","date":"2022-08-25","objectID":"/reading-the-48-laws-of-power/:0:0","tags":["读书笔记","厚黑学"],"title":"读《权利48法则》有感","uri":"/reading-the-48-laws-of-power/"},{"categories":["开发"],"content":"第一种方式playsound ","date":"2022-03-29","objectID":"/play-audio-.mp3-format-using-python/:1:0","tags":["Python"],"title":"使用python播放音频（.mp3格式）","uri":"/play-audio-.mp3-format-using-python/"},{"categories":["开发"],"content":"1.安装依赖包 pip install playsound ","date":"2022-03-29","objectID":"/play-audio-.mp3-format-using-python/:1:1","tags":["Python"],"title":"使用python播放音频（.mp3格式）","uri":"/play-audio-.mp3-format-using-python/"},{"categories":["开发"],"content":"2.使用 from playsound import playsound playsound('your music file path') print('music play finished') ","date":"2022-03-29","objectID":"/play-audio-.mp3-format-using-python/:1:2","tags":["Python"],"title":"使用python播放音频（.mp3格式）","uri":"/play-audio-.mp3-format-using-python/"},{"categories":["开发"],"content":"第二种方式pygame.mixer.music(推荐使用) 推荐理由，用这个库可以控制播放的音乐，比如暂停，停止，调节声音大小等 ","date":"2022-03-29","objectID":"/play-audio-.mp3-format-using-python/:2:0","tags":["Python"],"title":"使用python播放音频（.mp3格式）","uri":"/play-audio-.mp3-format-using-python/"},{"categories":["开发"],"content":"1.安装依赖包 pip install pygame ","date":"2022-03-29","objectID":"/play-audio-.mp3-format-using-python/:2:1","tags":["Python"],"title":"使用python播放音频（.mp3格式）","uri":"/play-audio-.mp3-format-using-python/"},{"categories":["开发"],"content":"2.使用 from ast import While import pygame \"\"\"初始化pygame\"\"\" pygame.mixer.init() \"\"\"加载音乐文件\"\"\" pygame.mixer.music.load('your music file path') \"\"\"设置音量\"\"\" pygame.mixer.music.set_volume(0.2) \"\"\"播放音乐\"\"\" pygame.mixer.music.play() \"\"\"播放完成再结束\"\"\" while pygame.mixer.music.get_busy(): pass print('播放结束') ","date":"2022-03-29","objectID":"/play-audio-.mp3-format-using-python/:2:2","tags":["Python"],"title":"使用python播放音频（.mp3格式）","uri":"/play-audio-.mp3-format-using-python/"},{"categories":["开发"],"content":"在网上下了个python脚本，第一个问题如何安装包， 在使用pip 命令行，出现的问题记录下（针对Windows用户） ","date":"2022-03-24","objectID":"/record-the-pits-stepped-on-when-pip-installs-modules/:0:0","tags":["Python"],"title":"记录pip安装模块时踩过的坑","uri":"/record-the-pits-stepped-on-when-pip-installs-modules/"},{"categories":["开发"],"content":"1.pip源更换为国内镜像 国内pip镜像源,全部使用https 阿里云 https://mirrors.aliyun.com/pypi/simple 中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple 豆瓣(douban) https://pypi.douban.com/simple 清华大学 https://pypi.tuna.tsinghua.edu.cn/simple 中国科学技术大学 https://pypi.mirrors.ustc.edu.cn/simple 更换方法，本人使用windows操作系统 在C:\\Users\\你的用户名 ，在这个目录下创建pip文件夹，然后在pip目录下创建pip.ini文件，文件内容如下 [global] index-url = https://pypi.mirrors.ustc.edu.cn/simple [install] trusted-host = pypi.mirrors.ustc.edu.cn 按照此上述操作不会再报以下错误 Could not fetch URL https://mirrors.aliyun.com/pypi/simple/pip/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='mirrors.aliyun.com', port=443): Max retries exceeded with url: /pypi/simple/pip/ (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:997)'))) - skipping 如果还出错请关闭翻墙代理软件！！！ ","date":"2022-03-24","objectID":"/record-the-pits-stepped-on-when-pip-installs-modules/:1:0","tags":["Python"],"title":"记录pip安装模块时踩过的坑","uri":"/record-the-pits-stepped-on-when-pip-installs-modules/"},{"categories":["开发"],"content":"2.安装 Microsoft Visual C++ Build Tools 问题报错如下 distutils.errors.DistutilsPlatformError: Microsoft Visual C++ 14.0 or greater is required. Get it with \"Microsoft C++ Build Tools\": https://visualstudio.microsoft.com/visual-cpp-build-tools/ Testing support for clang 就是提示你需要安装 Microsoft Visual C++ Build Tools 了。 这是网址 https://visualstudio.microsoft.com/visual-cpp-build-tools/ ","date":"2022-03-24","objectID":"/record-the-pits-stepped-on-when-pip-installs-modules/:2:0","tags":["Python"],"title":"记录pip安装模块时踩过的坑","uri":"/record-the-pits-stepped-on-when-pip-installs-modules/"},{"categories":["阅读"],"content":"老华是谁？80后创业达人，早年出国新西兰留学，为赚生活费，去餐馆打过黑工，跑过外卖，找到二手车生意赚取了人生第一桶金，商业嗅觉灵敏开碟店，扩大经营时发现电子产品如MP3，内存卡暴利，随即开始在网上销售，更是赚的盆满钵满。毕业回国，初入股市，投资不当损失惨重，准备东山再起。进入民企学习，卧薪尝胆，发现桌游市场，但由于战略失误，大学城附近开店（学生消费能力低）赚取不到利润，还消耗精力，随即放弃。再遇新西兰友人，发现验货商机，模式复制全国。再回新西兰发现油画市场，更加暴利。后回国创业，成立米课，一家外贸培训网站，期间拜访了一些国内VC。现在在抖音上直播，答疑解惑，帮助创业人整理思维逻辑。以下是本书中的一些笔记，亲供参考。 执行力 新西兰卖车，找到套利空间，执行并断验证自己想法是否成功。坚持低买高卖原则，并提供优质服务。后期在广交会上推广自己的验货渠道，使用简易手提袋，边想边做，效果很不错。 卖碟 不要和生意谈恋爱。分清楚项目是短期还是长久的。千万不能自欺欺人。 竞价模式，利用人性归属感，获取利润。知彼知己，分析对手，提供差异化，同质化是没有高利润的。再普通的产品也能做出差异化。 一个人，想要优秀，你必须接受挑战。 把行业来龙去脉搞通，创业成功概率才会大增。年轻人一定要有积累！！！ 老华说：“对年轻人来说，资金，学历，项目我觉得都不重要，最重要的就是你要有往上爬的冲劲，有了这种力量和激情，很多困难都可以解决，这才是我的核心竞争力。” 创业，投资之前都要做很多功课。 毛利低，总净利润不低，依靠“周转率”获得高利润。比如苏宁，沃尔玛。 刚进入新公司言多必失，尽职做好自己的同时，也一定要观察清楚周边情况。 创业团队危机 团队对你失去了信心，比如你能力不够，无法带领他们看到曙光。 你不会分钱，不会分利润，别人给你干活，干得多的和干得少的没区别，甚至什么都不干的还能被提拔，赏罚不明晰。 鸡血打太多，指望自己不付出，让员工给你卖命，工资待遇差。 商业模式基本点 产品定位 目标市场 销售推广 生产 定价-收入模式 成本 竞争 市场大小 决定公司是否能走的长久最关键的因素就是团队，人太重要了！在创业阶段，要做将帅之才。将才（短期思考+执行），帅才（长期思考+管理） 公司发展的好不好有两点可以看，第一有没有人冲着你的公司来。第二有没有人挖你的员工。 股市有风险的，不管这个人在其他行业干的如何，在没有自己的一套研究理论之前，始终是被割的韭菜，（华哥，09年在股市亏损500w有感），做个投资者而不是投机者。 华哥看投行的投资偏好和习惯 项目市场空间要大，天花板要高。 公司可以不盈利，但增长率要快，快速占据市场老大地位。 大部分基金偏爱移动互联网。 投资额度尽量要大。鸡蛋放在不同篮子里，只要有一个成了其他不用考虑成败。 投资回报率要高，否则没意义。 投行看不上分红。 持续垫高壁垒，挡住你的竞争对手。做一个善于堆高壁垒的人，做一家不容易被模仿的企业，才是在商场上立足的关键。 作为年轻人，可能没有钱，没有资源，有的就是选择权！这就是年轻人的优势，30多岁如果工作还不错，不太可能出来创业，成不太大了，万一失败，很多人再回去工作可能就拿不到之前的收入，所以即便在公司发张前景一般，为了安定也会选择继续干下去。（貌似说的就是我，留给我的时间真的不多了） 品牌传播，好的产品自然会产生好的口碑，用户会帮你宣传。 附录 学会深度思考。充分的思考带来的行动看似非常简单的，但这简单的行动背后有复杂的逻辑。 如果你可投资的金额少于100万元，我不建议你投资，你花时间在工作上产出会更大。千万千万别融资，估值+时间这两样才是投资的金钥匙。 ","date":"2022-03-20","objectID":"/feelings-after-reading-mr.hua-entrepreneurship-notes/:0:0","tags":["读书笔记","传记"],"title":"读《MR.HUA 创业手记》有感","uri":"/feelings-after-reading-mr.hua-entrepreneurship-notes/"},{"categories":["碎碎念"],"content":"很久没有写blog了，荒废了很久… 今天看了下服务器续费的钱，人直接傻了，这些云服务器厂商简直像是在抢钱，续费一年顶我刚开始买三年的。 想了下，今年多多写blog，建立起个人品牌，以后我会分享我在读的书，看到过比较好的视频，投资与健康，英语学习的一些方法，对了，还有我的主业技术上的分享，web3.0之前也研究了一些。 欢迎大家能多多提意见，让我们成为更好的自己。 ","date":"2022-03-03","objectID":"/abandoned-blog/:0:0","tags":["随想"],"title":"荒废的Blog","uri":"/abandoned-blog/"},{"categories":["开发"],"content":"在项目中经常会用if..else…去判断逻辑，当业务越来越复杂，一个逻辑会有大量的判断，如下面的代码 if(type.equals(\"o1\")){ // 执行o1逻辑 }else if(type.equals(\"o2\")){ // 执行o2逻辑 }else if(type.equals(\"o3\")){ // 执行o3逻辑 }else if(type.equals(\"o4\")){ // 执行o4逻辑 }else if(type.equals(\"o5\")){ // 执行o5逻辑 } 后面再增加逻辑o6,o7…一直到o99呢，这样写代码就会越写越长，后期越来越复杂，维护越来越难，嗯，已经闻到坏代码的味道，优化它。 首先想是否能通过设计模式来解决呢？ ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:0:0","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"1.策略模式 策略模式：一个类的行为或其他算法可以在运行时更改。这种类型的设计模式属于行为型模式。 在策略模式中，我们创建表示各种策略的对象和一个行为随着策略对象改变而改变context对象。策略对象改变context对象的执行算法。 关键词：实现同一个接口 那如何实现策略模式呢？ 我们把上面大量if…else…的代码，用策略模式来实现下 ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:1:0","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"1.1首先创建一个接口 public interface Strategy{ public void doSomething(); } ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:1:1","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"1.2.实现接口的类 public class OperationO1 implements Strategy{ @Override public void doSomething(){ System.out.println(\"执行o1逻辑。\"); } } public class OperationO2 implements Strategy{ @Override public void doSomething(){ System.out.println(\"执行o2逻辑。\"); } } public class OperationO3 implements Strategy{ @Override public void doSomething(){ System.out.println(\"执行o3逻辑。\"); } } ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:1:2","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"1.3.创建Context类 public class Conetext(){ private Strategy strategy; public Conetext(Strategy strategy){ this.strategy = strategy; } public void operation(){ strategy.doSomething(); } } ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:1:3","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"1.4.验证 public class Test{ public static void main(String[] args){ Conetext conetext = new Conetext(new OperationO1()); conetext.operation(); conetext = new Conetext(new OperationO2()); conetext.operation(); conetext = new Conetext(new OperationO3()); conetext.operation(); } } 执行打印 执行o1逻辑。 执行o2逻辑。 执行o3逻辑。 ok，策略模式代码已经实现了，发现唉不对啊，这好像更if…else没有什么关系？下面来演示在项目中的实战。 ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:1:4","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"2.表驱动 这就要引出另一个词表驱动 表驱动法，又称之为表驱动、表驱动方法。 “表”是几乎所有数据结构课本都要讨论的非常有用的数据结构。表驱动方法出于特定的目的来使用表，程序员们经常谈到“表驱动”方法，但是课本中却从未提到过什么是\"表驱动\"方法。表驱动方法是一种使你可以在表中查找信息，而不必用很多的逻辑语句（if或Case）来把它们找出来的方法。事实上，任何信息都可以通过表来挑选。在简单的情况下，逻辑语句往往更简单而且更直接。但随着逻辑链的复杂，表就变得越来越富有吸引力了。 表驱动+策略模式 ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:2:0","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"2.1.新增策略管理类 @Component public class StrategyManager { private Map\u003cString,Strategy\u003e dispatcher = new HashMap\u003c\u003e(); @PostConstruct private void initDispatcher(){ dispatcher.put(\"o1\",new OperationO1()); dispatcher.put(\"o2\",new OperationO2()); dispatcher.put(\"o3\",new OperationO3()); } public void doStrategy(String type) throws Exception{ Strategy strategy = dispatcher.get(type); if(strategy != null){ strategy.doSomething(); } else { throw new Exception(\"未找到业务策略。\"); } } } ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:2:1","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"2.2.注入并使用 @Autowired private StrategyManager strategyManager; public void test(String type){ strategyManager.doStrategy(type); } 后期再添加新策略，只要在策略管理类中添加新增策略的实现类。 ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:2:2","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["开发"],"content":"总结 最后记住一下秘诀 互斥条件表驱动， 嵌套条件校验链， 短路条件早return， 零散条件可组合。 ","date":"2021-03-27","objectID":"/optimize-a-lot-of-if...else.../:3:0","tags":["优化","设计思想"],"title":"优化项目中大量if...else...","uri":"/optimize-a-lot-of-if...else.../"},{"categories":["运维"],"content":"1.下载Nginx http://nginx.org/en/download.html ","date":"2020-12-04","objectID":"/linux-installation-and-deployment-of-nginx/:1:0","tags":["Linux","Nginx"],"title":"Linux安装部署Nginx","uri":"/linux-installation-and-deployment-of-nginx/"},{"categories":["运维"],"content":"2.上传到服务器上 解压 tar -xzf nginx-1.16.1.tar.gz ","date":"2020-12-04","objectID":"/linux-installation-and-deployment-of-nginx/:2:0","tags":["Linux","Nginx"],"title":"Linux安装部署Nginx","uri":"/linux-installation-and-deployment-of-nginx/"},{"categories":["运维"],"content":"3.安装 进入nginx 解压后的目录并执行 ./configure nginx会自动检查运行nginx所需要的库 其中这些库必须要安装 gcc++：nginx 编译需要这个库 PCRE：nginx 的http模块使用pcre库来解析正则表达式 zlib：zlib库提供很多解压和压缩的方式 OpenSSL：nginx支持http, https协议，OpenSSL库提供了常用的密钥和证书封装管理功能及SSL协议 安装 gcc++ yum install gcc-c++ 安装 PCRE yum install pcre pcre-devel 安装 zlib yum install zlib zlib-devel 安装 OpenSSL yum install openssl openssl-devel 编译nginx make make install ","date":"2020-12-04","objectID":"/linux-installation-and-deployment-of-nginx/:3:0","tags":["Linux","Nginx"],"title":"Linux安装部署Nginx","uri":"/linux-installation-and-deployment-of-nginx/"},{"categories":["运维"],"content":"4.启动、停止Nginx cd /usr/local/nginx/sbin/ ./nginx # 启动 ./nginx -s stop # 强制停止 ./nginx -s quit # 停止 （任务处理完停止） ./nginx -s reload # 重新加载配置 查询nginx进程 ps -ef|grep nginx ","date":"2020-12-04","objectID":"/linux-installation-and-deployment-of-nginx/:4:0","tags":["Linux","Nginx"],"title":"Linux安装部署Nginx","uri":"/linux-installation-and-deployment-of-nginx/"},{"categories":["运维"],"content":"5.遇到的问题 ","date":"2020-12-04","objectID":"/linux-installation-and-deployment-of-nginx/:5:0","tags":["Linux","Nginx"],"title":"Linux安装部署Nginx","uri":"/linux-installation-and-deployment-of-nginx/"},{"categories":["运维"],"content":"1.启动完成后，访问80端口被拒绝 检查本地80端口服务是否正常 curl 127.0.0.1 通过curl 命令检查是否有返回，有返回说明服务正常 检查防火墙端口是否打开 firewall-cmd --zone=public --query-port=80/tcp 返回 yes 说明打开，no说明关闭 打开防火墙 80端口 firewall-cmd --zone=public --add-port=80/tcp --permanent –permanent 永久生效，没有此参数重启后失效 重新载入 firewall-cmd --reload ","date":"2020-12-04","objectID":"/linux-installation-and-deployment-of-nginx/:5:1","tags":["Linux","Nginx"],"title":"Linux安装部署Nginx","uri":"/linux-installation-and-deployment-of-nginx/"},{"categories":["运维"],"content":"1.环境准备 64位Linux操作系统 64位JDK1.8+ ","date":"2020-11-16","objectID":"/install-and-deploy-nacos-in-linux-environment/:1:0","tags":["Linux","Nacos"],"title":"Linux 环境下安装、部署Nacos","uri":"/install-and-deploy-nacos-in-linux-environment/"},{"categories":["运维"],"content":"2.下载源码或安装包 https://github.com/alibaba/nacos/releases ","date":"2020-11-16","objectID":"/install-and-deploy-nacos-in-linux-environment/:2:0","tags":["Linux","Nacos"],"title":"Linux 环境下安装、部署Nacos","uri":"/install-and-deploy-nacos-in-linux-environment/"},{"categories":["运维"],"content":"3.启动、关闭命令 sh startup.sh -m standalone # 单机模式启动命令 sh shutdown.sh # 关闭命令 ","date":"2020-11-16","objectID":"/install-and-deploy-nacos-in-linux-environment/:3:0","tags":["Linux","Nacos"],"title":"Linux 环境下安装、部署Nacos","uri":"/install-and-deploy-nacos-in-linux-environment/"},{"categories":["运维"],"content":"出现的问题 运行脚本报错：syntax error near unexpected token `$’{\\r’ 这是由于项目是在Windows系统下编译，文件格式是DOC格式，与UNIX格式不符。需要把脚本文件格式改为UNIX格式。 打开脚本文件，用vi打开 vi startup.sh 输入 :set ff=unix ","date":"2020-11-16","objectID":"/install-and-deploy-nacos-in-linux-environment/:4:0","tags":["Linux","Nacos"],"title":"Linux 环境下安装、部署Nacos","uri":"/install-and-deploy-nacos-in-linux-environment/"},{"categories":["运维"],"content":"1.环境配置 64位 Linux操作系统 64位 JDK1.8+ RocketMQ二进制版本 http://rocketmq.apache.org/dowloading/releases/ ","date":"2020-11-10","objectID":"/how-to-install-and-deploy-rocketmq-in-linux/:1:0","tags":["Linux","RocketMQ"],"title":"Linux如何安装、部署RocketMQ","uri":"/how-to-install-and-deploy-rocketmq-in-linux/"},{"categories":["运维"],"content":"2.修改RocketMQ内存配置 修改runserver.sh、runbbroker.sh JAVA_OPT=\"${JAVA_OPT} -server -Xms8g -Xmx8g -Xmn4g\" 修改为 JAVA_OPT=\"${JAVA_OPT} -server -Xms256m -Xmx256m -Xmn128m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m\" ","date":"2020-11-10","objectID":"/how-to-install-and-deploy-rocketmq-in-linux/:2:0","tags":["Linux","RocketMQ"],"title":"Linux如何安装、部署RocketMQ","uri":"/how-to-install-and-deploy-rocketmq-in-linux/"},{"categories":["运维"],"content":"3.启动服务 Start Name Server nohup sh bin/mqnamesrv \u0026 tail -f ~/logs/rocketmqlogs/namesrv.log 启动成功 The Name Server boot success... Start Broker nohup sh bin/mqbroker -n localhost:9876 \u0026 tail -f ~/logs/rocketmqlogs/broker.log 启动成功 The broker[%s, 172.30.30.233:10911] boot success... ","date":"2020-11-10","objectID":"/how-to-install-and-deploy-rocketmq-in-linux/:3:0","tags":["Linux","RocketMQ"],"title":"Linux如何安装、部署RocketMQ","uri":"/how-to-install-and-deploy-rocketmq-in-linux/"},{"categories":["运维"],"content":"4.部署可视化服务 java -jar rocketmq-console-ng-1.0.1.jar --rocketmq.config.namesrvAddr='135.224.85.5:9876' ","date":"2020-11-10","objectID":"/how-to-install-and-deploy-rocketmq-in-linux/:4:0","tags":["Linux","RocketMQ"],"title":"Linux如何安装、部署RocketMQ","uri":"/how-to-install-and-deploy-rocketmq-in-linux/"},{"categories":["运维"],"content":"5.停止服务 关闭namesrv服务 sh bin/mqshutdown namesrv 关闭broker服务 sh bin/mqshutdown broker ","date":"2020-11-10","objectID":"/how-to-install-and-deploy-rocketmq-in-linux/:5:0","tags":["Linux","RocketMQ"],"title":"Linux如何安装、部署RocketMQ","uri":"/how-to-install-and-deploy-rocketmq-in-linux/"},{"categories":["运维"],"content":"1.下载Redis http://www.redis.cn/download.html 下载相应redis版本，并上传到服务器上 ","date":"2020-11-07","objectID":"/linux-installation-and-deployment-of-redis-single-machine/:1:0","tags":["Linux","Redis"],"title":"Linux 安装、部署Redis（单机）","uri":"/linux-installation-and-deployment-of-redis-single-machine/"},{"categories":["运维"],"content":"2.安装 解压，编译 tar -xzf redis-5.0.5.tar.gz cd redis-5.0.5 make 编译完成后，通过如下命令开启Redis src/redis-server ","date":"2020-11-07","objectID":"/linux-installation-and-deployment-of-redis-single-machine/:2:0","tags":["Linux","Redis"],"title":"Linux 安装、部署Redis（单机）","uri":"/linux-installation-and-deployment-of-redis-single-machine/"},{"categories":["运维"],"content":"3.设置Redis远程连接，后台启动，设置密码 打开配置文件 vi redis.conf 设置后台启动 daemonize yes # no 修改为 yes 设置远程连接 bind 135.224.85.5 # 修改为主机ip protected-mode no # yes 修改为 no 设置密码 requirepass 123456 # 设置密码为123456 ","date":"2020-11-07","objectID":"/linux-installation-and-deployment-of-redis-single-machine/:3:0","tags":["Linux","Redis"],"title":"Linux 安装、部署Redis（单机）","uri":"/linux-installation-and-deployment-of-redis-single-machine/"},{"categories":["运维"],"content":"4.重新开启Redis 关闭Redis命令 lsof -i :6379 # 找到对应的pid kill -9 XXXX # 杀掉对应的pid进程 重启Redis命令 src/redis-server redis.conf # 进入redis目录下 ","date":"2020-11-07","objectID":"/linux-installation-and-deployment-of-redis-single-machine/:4:0","tags":["Linux","Redis"],"title":"Linux 安装、部署Redis（单机）","uri":"/linux-installation-and-deployment-of-redis-single-machine/"},{"categories":["运维"],"content":"1.下载JDK 根据需求下载不同版本的JDK openJDK http://hg.openjdk.java.net/ OracleJDK https://www.oracle.com/technetwork/java/archive-139210.html ","date":"2020-11-05","objectID":"/how-to-install-jdk-in-linux-environment/:1:0","tags":["Linux","Java"],"title":"Linux环境下如何安装JDK","uri":"/how-to-install-jdk-in-linux-environment/"},{"categories":["运维"],"content":"2. 上传至服务器并解压 上传至服务器相应的目录下 使用 tar zxvf 命令解压 ","date":"2020-11-05","objectID":"/how-to-install-jdk-in-linux-environment/:2:0","tags":["Linux","Java"],"title":"Linux环境下如何安装JDK","uri":"/how-to-install-jdk-in-linux-environment/"},{"categories":["运维"],"content":"3. 配置环境变量 配置当前用户下的环境变量 vi ~/.bash_profile #在末尾加上 JAVA_HOME=/home/jenkinsadmin/jdk1.8.0_144 #此处应为jdk的解压目录 CLASSPATH=.:$JAVA_HOME/bin/tools.jar PATH=$JAVA_HOME/bin:$PATH export JAVA_HOME CLASSPATH PATH ","date":"2020-11-05","objectID":"/how-to-install-jdk-in-linux-environment/:3:0","tags":["Linux","Java"],"title":"Linux环境下如何安装JDK","uri":"/how-to-install-jdk-in-linux-environment/"},{"categories":["运维"],"content":"4.使环境变量文件生效 java -version 返回结果如下，说明修改成功 openjdk version \"1.8.0_40\" OpenJDK Runtime Environment (build 1.8.0_40-b25) OpenJDK 64-Bit Server VM (build 25.40-b25, mixed mode) ","date":"2020-11-05","objectID":"/how-to-install-jdk-in-linux-environment/:4:0","tags":["Linux","Java"],"title":"Linux环境下如何安装JDK","uri":"/how-to-install-jdk-in-linux-environment/"}]